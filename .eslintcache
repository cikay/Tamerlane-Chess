[{"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js":"1","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js":"2","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js":"3","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js":"4","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/helpers.js":"5","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js":"6","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js":"7","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js":"8","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js":"9","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js":"10","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js":"11","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js":"12","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js":"13","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js":"14","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js":"15","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js":"16","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js":"17","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js":"18","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js":"19","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js":"20","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js":"21","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js":"22","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js":"23","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js":"24","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js":"25"},{"size":500,"mtime":1610695920352,"results":"26","hashOfConfig":"27"},{"size":203,"mtime":1610971058234,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610695920352,"results":"29","hashOfConfig":"27"},{"size":4644,"mtime":1611168263470,"results":"30","hashOfConfig":"27"},{"size":4559,"mtime":1611168752504,"results":"31","hashOfConfig":"27"},{"size":1218,"mtime":1611077740856,"results":"32","hashOfConfig":"27"},{"size":1565,"mtime":1611138928120,"results":"33","hashOfConfig":"27"},{"size":158,"mtime":1611136956381,"results":"34","hashOfConfig":"27"},{"size":12580,"mtime":1611178139681,"results":"35","hashOfConfig":"27"},{"size":763,"mtime":1611134382815,"results":"36","hashOfConfig":"27"},{"size":263,"mtime":1610810278639,"results":"37","hashOfConfig":"27"},{"size":503,"mtime":1611133546986,"results":"38","hashOfConfig":"27"},{"size":1319,"mtime":1611176890005,"results":"39","hashOfConfig":"27"},{"size":377,"mtime":1611133713515,"results":"40","hashOfConfig":"27"},{"size":375,"mtime":1611133594186,"results":"41","hashOfConfig":"27"},{"size":425,"mtime":1611133605710,"results":"42","hashOfConfig":"27"},{"size":362,"mtime":1611133639483,"results":"43","hashOfConfig":"27"},{"size":428,"mtime":1611133648375,"results":"44","hashOfConfig":"27"},{"size":203,"mtime":1611133816256,"results":"45","hashOfConfig":"27"},{"size":139,"mtime":1610820699794,"results":"46","hashOfConfig":"27"},{"size":2814,"mtime":1611136554677,"results":"47","hashOfConfig":"27"},{"size":793,"mtime":1611176296733,"results":"48","hashOfConfig":"27"},{"size":604,"mtime":1610911409532,"results":"49","hashOfConfig":"27"},{"size":156,"mtime":1610813905318,"results":"50","hashOfConfig":"27"},{"size":241,"mtime":1611170222499,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"qgqcp2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js",[],["108","109"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js",["110","111","112","113"],"import { useEffect, useContext, createContext, useState, useMemo } from 'react'\nimport { validFen, fenToObj, validPositionObject } from './helpers'\nimport Board from './Board'\nimport TamerlaneChess from '../tamerlane-chess'\nconst TamerlaneChessContext = createContext()\nexport const useTamerlaneChessContext = () => useContext(TamerlaneChessContext)\n\nconst getPositionObject = (position) => {\n  if (position === 'start') {\n    return fenToObj(\n      'f1d1i1i1d1f/kamzvsgzmak/pxcbyqehtnr/92/92/92/92/PXCBYQEHTNR/KAMZGSVZMAK/F1D1I1I1D1F*2 w'\n    )\n  }\n  if (validFen(position)) return fenToObj(position)\n  if (validPositionObject(position)) return position\n  return {}\n}\n\nconst defaultProps = {\n  id: '0',\n  position: '',\n  pieces: {},\n  width: 560,\n  orientation: 'white',\n  showNotation: true,\n  sparePieces: false,\n  draggable: true,\n  undo: false,\n  dropOffBoard: 'snapback',\n  transitionDuration: 300,\n  boardStyle: {},\n  lightSquareStyle: { backgroundColor: 'rgb(240, 217, 181)' },\n  darkSquareStyle: { backgroundColor: 'rgb(181, 136, 99)' },\n  squareStyles: {},\n  dropSquareStyle: { boxShadow: 'inset 0 0 1px 4px yellow' },\n  calcWidth: () => {},\n  roughSquare: () => {},\n  onMouseOverSquare: () => {},\n  onMouseOutSquare: () => {},\n  onDrop: () => {},\n  getPosition: () => {},\n  onDragOverSquare: () => {},\n  onSquareClick: () => {},\n  onPieceClick: () => {},\n  onSquareRightClick: () => {},\n  allowDrag: () => true,\n}\nconst defaultState = {\n  fen: 'start',\n  dropSquareStyle: {},\n  squareStyles: {},\n  lightSquareStyle: { backgroundColor: 'rgb(240, 217, 181)' },\n  darkSquareStyle: { backgroundColor: 'rgb(181, 136, 99)' },\n  pieceSquare: '',\n  fromSquare: '',\n  toSquare: '',\n  selectedPiece: '',\n  history: [],\n  // previousPositionFromProps: getPositionObject('start'),\n  currentPosition: getPositionObject('start'),\n  sourceSquare: '',\n  targetSquare: '',\n  sourcePiece: '',\n  waitForTransition: false,\n  phantomPiece: null,\n  wasPieceTouched: false,\n  manualDrop: false,\n  squareClicked: false,\n  firstMove: false,\n  // pieces: { ...defaultPieces, ...this.props.pieces },\n  // und  oMove: this.props.undo,\n}\n\nexport default function TamerlaneChessBoard() {\n  let game\n  useEffect(() => {\n    game = new TamerlaneChess()\n  }, [])\n  const [state, setState] = useState(defaultState)\n  const removeHighlightSquare = () => {\n    const { pieceSquare, history } = state\n    setState((prevState) => ({\n      ...prevState,\n      fromSquare: '',\n      squareStyles: squareStyling({ pieceSquare, history }),\n    }))\n  }\n  const highlightSquare = (sourceSquare, squaresToHighlight) => {\n    const highlightStyles = [...squaresToHighlight].reduce((a, c) => {\n      return {\n        ...a,\n        ...{\n          [c]: {\n            background: 'radial-gradient(circle, #fffc00 36%, transparent 40%)',\n            borderRadius: '50%',\n          },\n        },\n        ...squareStyling({\n          history: state.history,\n          pieceSquare: state.pieceSquare,\n        }),\n      }\n    }, {})\n    setState((prevState) => ({\n      ...prevState,\n      fromSquare: sourceSquare,\n      squareStyles: { ...state.squareStyles, ...highlightStyles },\n    }))\n  }\n  const handleClick = (square) => {\n    console.log('clicked square')\n    console.log(\"square\", square)\n    const piece = game.getPiece(square)\n    console.log(`piece`)\n    console.log(piece)\n    const turn = game.getTurn()\n    // highlight possible moves\n    if (piece.color === turn) {\n      const moves = game.getMoves(square)\n      console.log('posible move')\n      console.log(moves)\n      if (moves.length === 0) return\n      const squaresToHighlight = []\n      for (const move of moves) {\n        squaresToHighlight.push(move)\n      }\n      highlightSquare(square, squaresToHighlight)\n    }\n    // make move\n    else {\n      removeHighlightSquare()\n      const move = game.makeMove(state.fromSquare, square)\n      if (move === null) return\n    }\n  }\n  const setPosition = ({ sourceSquare, targetSquare, piece }) => {}\n\n  const value = {\n    ...state,\n    handleClick,\n  }\n  return (\n    <TamerlaneChessContext.Provider value={value}>\n      <Board></Board>\n    </TamerlaneChessContext.Provider>\n  )\n}\n\nfunction squareStyling({ pieceSquare, history }) {\n  const sourceSquare = history.length && history[history.length - 1].from\n  const targetSquare = history.length && history[history.length - 1].to\n\n  return {\n    [pieceSquare]: { backgroundColor: 'rgba(255, 255, 0, 0.4)' },\n    ...(history.length && {\n      [sourceSquare]: {\n        backgroundColor: 'rgba(255, 255, 0, 0.4)',\n      },\n      [targetSquare]: {\n        backgroundColor: 'rgba(255, 255, 0, 0.4)',\n      },\n    }),\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/helpers.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js",["114","115","116","117","118","119","120","121","122","123","124"],"import React, { useEffect, useState, useMemo } from 'react'\r\nimport './board.css'\r\nimport Square from './Square'\r\nimport Piece from './Piece'\r\nimport { COLUMNS } from './helpers'\r\nimport { useTamerlaneChessContext } from './index'\r\n// import TamerlaneChess from '../tamerlane-chess'\r\nconst Board = () => {\r\n  const {\r\n    currentPosition,\r\n    lightSquareStyle,\r\n    darkSquareStyle,\r\n  } = useTamerlaneChessContext()\r\n  // let game\r\n  useEffect(() => {\r\n    // game = new TamerlaneChess()\r\n  }, [])\r\n  const setPosition = (sourceSquare, targetSquare, piece) => {}\r\n\r\n  const handleDrag = () => {}\r\n  const handleDrop = (sourceSquare, targetSquare) => {}\r\n\r\n  const getSquareCoordinates = () => {}\r\n  const setSquareCoordinates = () => {}\r\n\r\n  return (\r\n    <div id='GameBoard'>\r\n      {[...Array(10)].map((_, r) => {\r\n        return [...Array(11)].map((_, c) => {\r\n          const row = 10 - r\r\n          const square = `${COLUMNS[c]}${row}`\r\n\r\n          return (\r\n            <Square key={square} square={square} row={row} col={c + 1}></Square>\r\n          )\r\n        })\r\n      })}\r\n      <Square key='x' square={'x'}></Square>\r\n      <Square key='y' square={'x'}></Square>\r\n    </div>\r\n  )\r\n}\r\nexport default Board\r\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js",["125","126","127"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Piece from './Piece'\nimport { useTamerlaneChessContext } from './index'\nconst defaultSquareStyle = (squareColor) => {\n  // return {\n  //   ...size(width),\n  //   ...center,\n  //   ...(squareColor === 'black' ? darkSquareStyle : lightSquareStyle),\n  //   ...(isOver && dropSquareColor),\n  // }\n}\n\nconst Square = (props) => {\n  const {\n    darkSquareStyle,\n    lightSquareStyle,\n    currentPosition,\n    handleClick,\n  } = useTamerlaneChessContext()\n  const hasPiece = (currentPosition, square) => {\n    const keys = Object.keys(currentPosition)\n    return currentPosition && keys && keys.includes(square)\n  }\n  const getPieceName = (square) => {\n    return currentPosition[square]\n  }\n\n  const squareStyle =\n    props.squareColor === 'black' ? darkSquareStyle : lightSquareStyle\n  return (\n    <div\n      style={defaultSquareStyle()}\n      id={props.square}\n      onClick={(square) => handleClick(props.square)}\n      className={`file${props.col} rank${props.row}`}\n    >\n      {hasPiece(currentPosition, props.square) && (\n        <Piece pieceName={getPieceName(props.square)}></Piece>\n      )}\n    </div>\n  )\n}\n\n// Square.PropTypes = {\n//   width: PropTypes.func,\n//   squareColor: PropTypes.oneOf(['white', 'black']),\n//   children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]),\n//   square: PropTypes.string,\n//   lightSquareStyle: PropTypes.object,\n//   darkSquareStyle: PropTypes.object,\n//   roughSquare: PropTypes.func,\n// }\n\nconst size = () => {\n  return\n}\nexport default Square\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js",["128"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js",["129"],"import NoneSlidePiece from './NoneSlidePiece'\n\nexport default class Vizier extends NoneSlidePiece {\n  _directions = [\n    { rowDir: -1, colDir: 0 },\n    { rowDir: 0, colDir: 1 },\n    { rowDir: 1, colDir: 0 },\n    { rowDir: 0, colDir: -1 },\n  ]\n  constructor(row, col, color) {\n    super(row, col, color)\n  }\n  get directions() {\n    return this._directions\n  }\n}","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js",["130","131"],"import Piece from './Piece'\nimport { COLOR } from '../types'\nclass Pawn extends Piece {\n  \n  constructor(row, col, color) {\n    super(row, col, color)\n    if (this.constructor === Pawn) {\n      throw Error('Pawn can not be instated')\n    }\n    \n    this.pawn = true\n  }\n\n  validMoves(board, playerColor) {\n    if (playerColor !== COLOR.white && playerColor !== COLOR.black) {\n      throw Error('No matching player color with black or white')\n    }\n    const moves = []\n    let col = this.col\n    let attackedPiece\n    let row\n    if (playerColor === this.color) {\n      //UP\n      row = this.row - 1\n      if (col < 12 && col > -1 && row < 10 && row > -1) {\n        attackedPiece = board[row][col]\n        if (attackedPiece === 0) {\n          moves.push({ row, col })\n        }\n      }\n\n      //RIGHT UP\n      col = this.col + 1\n      if (col < 12 && col > -1 && row < 10 && row > -1) {\n        attackedPiece = board[row][col]\n        if (attackedPiece.color !== this.color) {\n          moves.push({ row, col })\n        }\n      }\n\n      //LEFT UP\n      col = this.col - 1\n      if (col < 12 && col > -1 && row < 10 && row > -1) {\n        attackedPiece = board[row][col]\n        if (attackedPiece.color !== this.color) {\n          moves.push({ row, col })\n        }\n      }\n    }\n    //no need when online\n    else {\n      //DOWN\n      row = this.row + 1\n      col = this.col\n      if (col < 12 && col > -1 && row < 10 && row > -1) {\n        attackedPiece = board[row][col]\n        if (attackedPiece == 0) {\n          moves.push({ row, col })\n        }\n      }\n\n      //RIGHT DOWN\n      col = this.col + 1\n      if (col < 12 && col > -1 && row < 10 && row > -1) {\n        attackedPiece = board[row][col]\n        if (attackedPiece.color !== this.color) {\n          moves.push({ row, col })\n        }\n      }\n      //LEFT DOWN\n      if (col < 12 && col > -1 && row < 10 && row > -1) {\n        col = this.col - 1\n        attackedPiece = board[row][col]\n        if (attackedPiece.color !== this.color) {\n          moves.push({ row, col })\n        }\n      }\n    }\n  }\n}\n\nexport class PawnOfPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n  }\n  validMoves(board, playerColor) {\n    //ozel durumlar kontrol edilecek\n    if (true) {\n      super.validMoves(board, playerColor)\n    }\n  }\n}\n\nexport class KingPawn extends Pawn {\n  validMoves(board) {\n    //eğer\n    if (true) {\n      super.validMoves(board)\n    }\n  }\n}\n\nexport class CamelPawn extends Pawn {}\nexport class CatapultPawn extends Pawn {}\n\nexport class ElephantPawn extends Pawn {}\n\nexport class GeneralPawn extends Pawn {}\n\nexport class GiraffePawn extends Pawn {}\n\nexport class KnightPawn extends Pawn {}\n\nexport class RookPawn extends Pawn {}\n\nexport class VizierPawn extends Pawn {}\nexport class WarEnginePawn extends Pawn {}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":58,"nodeType":"138","messageId":"139","endLine":1,"endColumn":65},{"ruleId":"136","severity":1,"message":"140","line":19,"column":7,"nodeType":"138","messageId":"139","endLine":19,"endColumn":19},{"ruleId":"141","severity":1,"message":"142","line":77,"column":12,"nodeType":"143","endLine":77,"endColumn":32},{"ruleId":"136","severity":1,"message":"144","line":136,"column":9,"nodeType":"138","messageId":"139","endLine":136,"endColumn":20},{"ruleId":"136","severity":1,"message":"145","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":1,"column":38,"nodeType":"138","messageId":"139","endLine":1,"endColumn":45},{"ruleId":"136","severity":1,"message":"146","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"147","line":10,"column":5,"nodeType":"138","messageId":"139","endLine":10,"endColumn":20},{"ruleId":"136","severity":1,"message":"148","line":11,"column":5,"nodeType":"138","messageId":"139","endLine":11,"endColumn":21},{"ruleId":"136","severity":1,"message":"149","line":12,"column":5,"nodeType":"138","messageId":"139","endLine":12,"endColumn":20},{"ruleId":"136","severity":1,"message":"144","line":18,"column":9,"nodeType":"138","messageId":"139","endLine":18,"endColumn":20},{"ruleId":"136","severity":1,"message":"150","line":20,"column":9,"nodeType":"138","messageId":"139","endLine":20,"endColumn":19},{"ruleId":"136","severity":1,"message":"151","line":21,"column":9,"nodeType":"138","messageId":"139","endLine":21,"endColumn":19},{"ruleId":"136","severity":1,"message":"152","line":23,"column":9,"nodeType":"138","messageId":"139","endLine":23,"endColumn":29},{"ruleId":"136","severity":1,"message":"153","line":24,"column":9,"nodeType":"138","messageId":"139","endLine":24,"endColumn":29},{"ruleId":"136","severity":1,"message":"154","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":17},{"ruleId":"136","severity":1,"message":"155","line":29,"column":9,"nodeType":"138","messageId":"139","endLine":29,"endColumn":20},{"ruleId":"136","severity":1,"message":"156","line":55,"column":7,"nodeType":"138","messageId":"139","endLine":55,"endColumn":11},{"ruleId":"136","severity":1,"message":"157","line":195,"column":9,"nodeType":"138","messageId":"139","endLine":195,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":10,"column":3,"nodeType":"160","messageId":"161","endLine":12,"endColumn":4},{"ruleId":"162","severity":1,"message":"163","line":57,"column":27,"nodeType":"164","messageId":"165","endLine":57,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":83,"column":3,"nodeType":"160","messageId":"161","endLine":85,"endColumn":4},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'defaultProps' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'game' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","'setPosition' is assigned a value but never used.","'useState' is defined but never used.","'Piece' is defined but never used.","'currentPosition' is assigned a value but never used.","'lightSquareStyle' is assigned a value but never used.","'darkSquareStyle' is assigned a value but never used.","'handleDrag' is assigned a value but never used.","'handleDrop' is assigned a value but never used.","'getSquareCoordinates' is assigned a value but never used.","'setSquareCoordinates' is assigned a value but never used.","'PropTypes' is defined but never used.","'squareStyle' is assigned a value but never used.","'size' is assigned a value but never used.","'changed' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]