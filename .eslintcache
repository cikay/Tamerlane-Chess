[{"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js":"1","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js":"2","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js":"3","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js":"4","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js":"5","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js":"6","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js":"7","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js":"8","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js":"9","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js":"10","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js":"11","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js":"12","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js":"13","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js":"14","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js":"15","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js":"16","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js":"17","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js":"18","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js":"19","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js":"20","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js":"21","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js":"22","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js":"23","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js":"24","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessReducers.js":"25","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessActionTypes.js":"26","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/helper/Fen.js":"27"},{"size":500,"mtime":1610695920352,"results":"28","hashOfConfig":"29"},{"size":203,"mtime":1610971058234,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1610695920352,"results":"31","hashOfConfig":"29"},{"size":3419,"mtime":1611744305745,"results":"32","hashOfConfig":"29"},{"size":1439,"mtime":1611242597940,"results":"33","hashOfConfig":"29"},{"size":1474,"mtime":1611394900621,"results":"34","hashOfConfig":"29"},{"size":158,"mtime":1611136956381,"results":"35","hashOfConfig":"29"},{"size":16779,"mtime":1611748395063,"results":"36","hashOfConfig":"29"},{"size":763,"mtime":1611134382815,"results":"37","hashOfConfig":"29"},{"size":1258,"mtime":1611745611502,"results":"38","hashOfConfig":"29"},{"size":460,"mtime":1611509604056,"results":"39","hashOfConfig":"29"},{"size":1265,"mtime":1611669460843,"results":"40","hashOfConfig":"29"},{"size":333,"mtime":1611503981298,"results":"41","hashOfConfig":"29"},{"size":332,"mtime":1611503985710,"results":"42","hashOfConfig":"29"},{"size":382,"mtime":1611503994194,"results":"43","hashOfConfig":"29"},{"size":318,"mtime":1611504001566,"results":"44","hashOfConfig":"29"},{"size":256,"mtime":1611665916773,"results":"45","hashOfConfig":"29"},{"size":521,"mtime":1611571116562,"results":"46","hashOfConfig":"29"},{"size":967,"mtime":1611568374033,"results":"47","hashOfConfig":"29"},{"size":6041,"mtime":1611745547599,"results":"48","hashOfConfig":"29"},{"size":584,"mtime":1611604801993,"results":"49","hashOfConfig":"29"},{"size":1057,"mtime":1611604491189,"results":"50","hashOfConfig":"29"},{"size":156,"mtime":1610813905318,"results":"51","hashOfConfig":"29"},{"size":563,"mtime":1611503990450,"results":"52","hashOfConfig":"29"},{"size":1897,"mtime":1611747762813,"results":"53","hashOfConfig":"29"},{"size":217,"mtime":1611395259331,"results":"54","hashOfConfig":"29"},{"size":4884,"mtime":1611245872560,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"qgqcp2",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js",[],["116","117"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js",["118","119","120"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js",["121","122","123","124","125","126","127","128","129","130","131"],"import React, { useEffect, useState, useMemo } from 'react'\r\nimport './board.css'\r\nimport Square from './Square'\r\nimport Piece from './Piece'\r\nimport { COLUMNS } from '../helper/helpers'\r\nimport { useTamerlaneChessContext } from './index'\r\n// import TamerlaneChess from '../tamerlane-chess'\r\nconst Board = () => {\r\n  const {\r\n    currentPosition,\r\n    lightSquareStyle,\r\n    darkSquareStyle,\r\n  } = useTamerlaneChessContext()\r\n  // let game\r\n  useEffect(() => {\r\n    // game = new TamerlaneChess()\r\n  }, [])\r\n  const setPosition = (sourceSquare, targetSquare, piece) => {}\r\n\r\n  const handleDrag = () => {}\r\n  const handleDrop = (sourceSquare, targetSquare) => {}\r\n\r\n  const getSquareCoordinates = () => {}\r\n  const setSquareCoordinates = () => {}\r\n  let squareColor = 'black'\r\n  return (\r\n    <div id='GameBoard'>\r\n      {[...Array(10)].map((_, r) => {\r\n        return [...Array(11)].map((_, c) => {\r\n          const row = 10 - r\r\n          const square = `${COLUMNS[c]}${row}`\r\n          squareColor = squareColor === 'black' ? 'white' : 'black'\r\n          return (\r\n            <Square\r\n              key={square}\r\n              square={square}\r\n              squareColor={squareColor}\r\n              row={row}\r\n              col={c + 1}\r\n            ></Square>\r\n          )\r\n        })\r\n      })}\r\n      {/* <Square key='x' square={'x'}></Square>\r\n      <Square key='y' square={'y'}></Square> */}\r\n    </div>\r\n  )\r\n}\r\nexport default Board\r\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js",["132"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Piece from './Piece'\nimport { useTamerlaneChessContext } from './index'\n\nconst Square = ({ square, squareColor, row, col }) => {\n  const {\n    darkSquareStyle,\n    lightSquareStyle,\n    currentPosition,\n    handleClick,\n    squareStyles,\n  } = useTamerlaneChessContext()\n\n  const hasPiece = (currentPosition, square) => {\n    const keys = Object.keys(currentPosition)\n    return currentPosition && keys && keys.includes(square)\n  }\n  const getPieceName = (square) => {\n    return currentPosition[square]\n  }\n\n  const squareStyle = () => {\n    return {\n      ...(squareColor === 'black' ? darkSquareStyle : lightSquareStyle),\n    }\n  }\n\n  return (\n    <div\n      style={squareStyle()}\n      id={square}\n      onClick={() => handleClick(square)}\n      className={`file${col} rank${row}`}\n    > \n      <div style={{ ...squareStyles[square], ...size() }}>\n        {hasPiece(currentPosition, square) && (\n          <Piece pieceName={getPieceName(square)}></Piece>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst size = () => ({\n  height: 50,\n  width: 50,\n})\n\n// Square.PropTypes = {\n//   width: PropTypes.func,\n//   squareColor: PropTypes.oneOf(['white', 'black']),\n//   children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]),\n//   square: PropTypes.string,\n//   lightSquareStyle: PropTypes.object,\n//   darkSquareStyle: PropTypes.object,\n//   roughSquare: PropTypes.func,\n// }\n\nexport default Square\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js",["133","134","135"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js",["136"],"import NoneSlidePiece from './NoneSlidePiece'\n\nexport default class Vizier extends NoneSlidePiece {\n  static _directions = [\n    { rowDir: -1, colDir: 0 },\n    { rowDir: 0, colDir: 1 },\n    { rowDir: 1, colDir: 0 },\n    { rowDir: 0, colDir: -1 },\n  ]\n  constructor(row, col, color) {\n    super(row, col, color)\n  }\n \n}","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js",["137"],"import Piece from './Piece'\n\nexport default class Giraffe extends Piece {\n  static #directions = [\n    { rowDir: -1, colDir: 1 },\n    { rowDir: 1, colDir: 1 },\n    { rowDir: 1, colDir: -1 },\n    { rowDir: -1, colDir: -1 },\n  ]\n\n  validMoves(board) {\n    const moves = []\n    let currentCol\n    let currentRow\n    for (const { rowDir, colDir } of Giraffe.#directions) {\n      currentCol = this.col + rowDir\n      currentRow = this.row + colDir\n      let piece = board[currentCol][currentRow]\n    }\n\n    return moves\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js",["138","139"],"import Piece from './Piece'\nimport Camel from './Camel'\nimport Knight from './Knight'\nimport General from './Catapult'\nimport Catapult from './Catapult'\nimport Vizier from './Vizier'\nimport WarEngine from './WarEngine'\nimport Giraffe from './Giraffe'\nimport Elephant from './Elephant'\nimport Rook from './Rook'\nimport { COLOR } from '../types'\nimport { getMoveList, SuperArray } from '../helper'\nclass Pawn extends Piece {\n  static _diagonalColsIncrementValues = [-1, 1]\n  constructor(row, col, color) {\n    super(row, col, color)\n    if (this.constructor === Pawn) {\n      throw Error('Pawn can not be instated')\n    }\n\n    this.pawn = true\n  }\n\n  updateValidMoves(board, playerColor) {\n    this.moveList = this.validMoves(board, playerColor)\n  }\n\n  isPieceOpponent(row, col, board) {\n    const attackedPiece = board[row][col]\n    if (attackedPiece !== 0 && attackedPiece.color !== this.color) {\n      return true\n    }\n    return false\n  }\n\n  validMoves(board, playerColor) {\n    console.log('pawn color', playerColor)\n    if (playerColor !== COLOR.white && playerColor !== COLOR.black) {\n      throw Error('No matching player color with black or white')\n    }\n    const moves = []\n    let row\n    let col\n\n    const rowIncrementValue = playerColor === this.color ? 1 : -1\n    row = this.row + rowIncrementValue\n\n    //UP\n    col = this.col\n    if (\n      this.IsPositionInBoard(row, col) &&\n      this.isSquareEmpty(row, col, board)\n    ) {\n      moves.push({ row, col })\n    }\n\n    let colIncrementValue\n    for (colIncrementValue of Pawn._diagonalColsIncrementValues) {\n      col = this.col + colIncrementValue\n      if (\n        this.IsPositionInBoard(row, col) &&\n        this.isPieceOpponent(row, col, board)\n      ) {\n        moves.push({ row, col })\n      }\n    }\n\n    return moves\n  }\n}\n\nexport class PawnOfPawn extends Pawn {\n  static #firstPromoted = 1\n  static #secondPromoted = 2\n  static #noPromoted = 0\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedCount = 0\n  }\n  validMoves(board, playerColor) {\n    console.log('pawn color', playerColor)\n    switch (this.getPromotedType(playerColor)) {\n      //regular moves\n      case PawnOfPawn.#noPromoted:\n        console.log('no promotion')\n        return super.validMoves(board, playerColor)\n      case PawnOfPawn.#firstPromoted:\n        return SuperArray.getUniqueItemContextArray([\n          ...this.getForkMoves(board, playerColor),\n          ...this.getImmobileMoves(board, playerColor),\n        ])\n      case PawnOfPawn.#secondPromoted:\n        // move to pawn of king position\n        return []\n    }\n  }\n\n  getForkMoves(board, playerColor) {\n    const moves = []\n    let row, col, piece\n    for (row of board) {\n      for (piece of row) {\n        if (\n          this.isOpponentPiece(piece) &&\n          this.IsPositionInBoard(piece.row, piece.col + 2)\n        ) {\n          const rowIncrement = playerColor === 'w' ? -1 : 1\n          const forkingRow = piece.row + rowIncrement\n          const forkingCol = piece.col + 1\n          if (this.IsPositionInBoard(forkingRow, forkingCol)) {\n            moves.push({ row: forkingRow, col: forkingCol })\n          }\n        }\n      }\n    }\n    return moves\n  }\n\n  getImmobileMoves(board, playerColor) {\n    const moves = []\n    let row\n    let piece\n    for (row of board) {\n      for (piece of row) {\n        if (this.isOpponentPiece(piece)) {\n          const opponentPieceMoves = getMoveList(board, piece, playerColor)\n          if (opponentPieceMoves.length === 0) {\n            let rowPos, colPos\n            const rowIncerementValue = playerColor === this.color ? -1 : 1\n            rowPos = piece.row + rowIncerementValue\n            let colIncrementValue\n            for (colIncrementValue of PawnOfPawn._diagonalColsIncrementValues) {\n              colPos = piece.col + colIncrementValue\n              if (this.IsPositionInBoard(rowPos, colPos)) {\n                moves.push({\n                  row: rowPos,\n                  col: colPos,\n                })\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return moves\n  }\n\n  getPromotedType(playerColor) {\n    if (\n      playerColor === this.color &&\n      this.row === 9 &&\n      this.promotedCount === PawnOfPawn.#firstPromoted\n    ) {\n      return PawnOfPawn.#firstPromoted\n    } else if (\n      playerColor !== this.color &&\n      this.row === 0 &&\n      this.promotedCount === PawnOfPawn.#secondPromoted\n    ) {\n      return PawnOfPawn.#secondPromoted\n    }\n    return PawnOfPawn.#noPromoted\n  }\n}\n\nexport class KingPawn extends Pawn {\n  validMoves(board, playerColor) {\n    //eğer\n    if (true) {\n      return super.validMoves(board, playerColor)\n    }\n  }\n}\n\nexport class CamelPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Camel\n  }\n\n  validMoves(board, playerColor) {\n    return super.validMoves(board, playerColor)\n  }\n}\n\nexport class CatapultPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Catapult\n  }\n}\nexport class ElephantPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Elephant\n  }\n}\nexport class GeneralPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = General\n  }\n}\nexport class GiraffePawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Giraffe\n  }\n}\nexport class KnightPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Knight\n  }\n}\nexport class RookPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Rook\n  }\n}\nexport class VizierPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Vizier\n  }\n}\nexport class WarEnginePawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = WarEngine\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessReducers.js",["140","141","142"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessActionTypes.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/helper/Fen.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":24,"column":13,"nodeType":"149","messageId":"150","endLine":24,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":24,"column":26,"nodeType":"149","messageId":"150","endLine":24,"endColumn":33},{"ruleId":"147","severity":1,"message":"152","line":94,"column":9,"nodeType":"149","messageId":"150","endLine":94,"endColumn":20},{"ruleId":"147","severity":1,"message":"153","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"154","line":1,"column":38,"nodeType":"149","messageId":"150","endLine":1,"endColumn":45},{"ruleId":"147","severity":1,"message":"155","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":13},{"ruleId":"147","severity":1,"message":"156","line":10,"column":5,"nodeType":"149","messageId":"150","endLine":10,"endColumn":20},{"ruleId":"147","severity":1,"message":"157","line":11,"column":5,"nodeType":"149","messageId":"150","endLine":11,"endColumn":21},{"ruleId":"147","severity":1,"message":"158","line":12,"column":5,"nodeType":"149","messageId":"150","endLine":12,"endColumn":20},{"ruleId":"147","severity":1,"message":"152","line":18,"column":9,"nodeType":"149","messageId":"150","endLine":18,"endColumn":20},{"ruleId":"147","severity":1,"message":"159","line":20,"column":9,"nodeType":"149","messageId":"150","endLine":20,"endColumn":19},{"ruleId":"147","severity":1,"message":"160","line":21,"column":9,"nodeType":"149","messageId":"150","endLine":21,"endColumn":19},{"ruleId":"147","severity":1,"message":"161","line":23,"column":9,"nodeType":"149","messageId":"150","endLine":23,"endColumn":29},{"ruleId":"147","severity":1,"message":"162","line":24,"column":9,"nodeType":"149","messageId":"150","endLine":24,"endColumn":29},{"ruleId":"147","severity":1,"message":"163","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"164","line":145,"column":11,"nodeType":"149","messageId":"150","endLine":145,"endColumn":16},{"ruleId":"147","severity":1,"message":"165","line":201,"column":7,"nodeType":"149","messageId":"150","endLine":201,"endColumn":14},{"ruleId":"147","severity":1,"message":"165","line":257,"column":9,"nodeType":"149","messageId":"150","endLine":257,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":10,"column":3,"nodeType":"168","messageId":"169","endLine":12,"endColumn":4},{"ruleId":"147","severity":1,"message":"164","line":18,"column":11,"nodeType":"149","messageId":"150","endLine":18,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":82,"column":5,"nodeType":"172","messageId":"173","endLine":95,"endColumn":6},{"ruleId":"147","severity":1,"message":"174","line":100,"column":14,"nodeType":"149","messageId":"150","endLine":100,"endColumn":17},{"ruleId":"147","severity":1,"message":"175","line":10,"column":3,"nodeType":"149","messageId":"150","endLine":10,"endColumn":11},{"ruleId":"147","severity":1,"message":"176","line":11,"column":3,"nodeType":"149","messageId":"150","endLine":11,"endColumn":11},{"ruleId":"147","severity":1,"message":"177","line":12,"column":3,"nodeType":"149","messageId":"150","endLine":12,"endColumn":22},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'pieceSquare' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'Piece' is defined but never used.","'currentPosition' is assigned a value but never used.","'lightSquareStyle' is assigned a value but never used.","'darkSquareStyle' is assigned a value but never used.","'handleDrag' is assigned a value but never used.","'handleDrop' is assigned a value but never used.","'getSquareCoordinates' is assigned a value but never used.","'setSquareCoordinates' is assigned a value but never used.","'PropTypes' is defined but never used.","'piece' is assigned a value but never used.","'changed' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'col' is defined but never used.","'validFen' is defined but never used.","'fenToObj' is defined but never used.","'validPositionObject' is defined but never used.","no-global-assign","no-unsafe-negation"]