[{"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js":"1","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js":"2","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js":"3","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/PrivateRoute.js":"4","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/PageNotFound.js":"5","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/index.js":"6","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/index.js":"7","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/Home.js":"8","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/AuthContext/index.js":"9","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/Login.js":"10","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/VerifyEmail.js":"11","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/Signup.js":"12","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/PasswordReset.js":"13","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/PasswordResetConfirm.js":"14","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/GameSettings.js":"15","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/SocketContext/index.js":"16","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/AuthContext/authActions.js":"17","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/AuthContext/authReducer.js":"18","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/CenteredContainer.js":"19","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js":"20","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/helper/Fen.js":"21","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessActionTypes.js":"22","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessReducers.js":"23","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js":"24","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js":"25","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js":"26","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js":"27","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js":"28","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js":"29","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js":"30","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js":"31","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js":"32","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js":"33","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js":"34","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js":"35","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js":"36","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js":"37","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js":"38","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js":"39","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js":"40","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js":"41","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Prince.js":"42","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js":"43","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/AdventitiousKing.js":"44","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js":"45","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/Dialog.js":"46","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/hooks/useLocalStorage.js":"47","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/PlayersContext/index.js":"48","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/Timer.js":"49","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/GameFinishDialog.js":"50"},{"size":500,"mtime":1610695920352,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":1610695920352,"results":"53","hashOfConfig":"52"},{"size":1744,"mtime":1613486691493,"results":"54","hashOfConfig":"52"},{"size":493,"mtime":1613067852055,"results":"55","hashOfConfig":"52"},{"size":126,"mtime":1612257939093,"results":"56","hashOfConfig":"52"},{"size":308,"mtime":1613488544079,"results":"57","hashOfConfig":"52"},{"size":276,"mtime":1612688814618,"results":"58","hashOfConfig":"52"},{"size":2599,"mtime":1613489879852,"results":"59","hashOfConfig":"52"},{"size":4100,"mtime":1612774187945,"results":"60","hashOfConfig":"52"},{"size":2370,"mtime":1613133979334,"results":"61","hashOfConfig":"52"},{"size":1192,"mtime":1612688574044,"results":"62","hashOfConfig":"52"},{"size":4227,"mtime":1612695978648,"results":"63","hashOfConfig":"52"},{"size":1775,"mtime":1612688648387,"results":"64","hashOfConfig":"52"},{"size":1627,"mtime":1612688576575,"results":"65","hashOfConfig":"52"},{"size":130,"mtime":1612729459694,"results":"66","hashOfConfig":"52"},{"size":690,"mtime":1613137981946,"results":"67","hashOfConfig":"52"},{"size":798,"mtime":1612256306390,"results":"68","hashOfConfig":"52"},{"size":1524,"mtime":1613133021243,"results":"69","hashOfConfig":"52"},{"size":356,"mtime":1612688878963,"results":"70","hashOfConfig":"52"},{"size":5642,"mtime":1613660993340,"results":"71","hashOfConfig":"52"},{"size":5650,"mtime":1613243742738,"results":"72","hashOfConfig":"52"},{"size":256,"mtime":1613648069256,"results":"73","hashOfConfig":"52"},{"size":2098,"mtime":1613664192926,"results":"74","hashOfConfig":"52"},{"size":956,"mtime":1613068666974,"results":"75","hashOfConfig":"52"},{"size":156,"mtime":1610813905318,"results":"76","hashOfConfig":"52"},{"size":206,"mtime":1613375951164,"results":"77","hashOfConfig":"52"},{"size":1432,"mtime":1612175140646,"results":"78","hashOfConfig":"52"},{"size":24245,"mtime":1613663970979,"results":"79","hashOfConfig":"52"},{"size":2240,"mtime":1612731440853,"results":"80","hashOfConfig":"52"},{"size":763,"mtime":1611134382815,"results":"81","hashOfConfig":"52"},{"size":364,"mtime":1612175140642,"results":"82","hashOfConfig":"52"},{"size":1303,"mtime":1612175140642,"results":"83","hashOfConfig":"52"},{"size":495,"mtime":1612175140642,"results":"84","hashOfConfig":"52"},{"size":361,"mtime":1612175140642,"results":"85","hashOfConfig":"52"},{"size":364,"mtime":1612175140642,"results":"86","hashOfConfig":"52"},{"size":631,"mtime":1612175140642,"results":"87","hashOfConfig":"52"},{"size":366,"mtime":1612175140642,"results":"88","hashOfConfig":"52"},{"size":489,"mtime":1612175140642,"results":"89","hashOfConfig":"52"},{"size":1077,"mtime":1612175140642,"results":"90","hashOfConfig":"52"},{"size":7042,"mtime":1612175140642,"results":"91","hashOfConfig":"52"},{"size":692,"mtime":1612212963247,"results":"92","hashOfConfig":"52"},{"size":476,"mtime":1612175140642,"results":"93","hashOfConfig":"52"},{"size":1239,"mtime":1612175140642,"results":"94","hashOfConfig":"52"},{"size":580,"mtime":1612175140642,"results":"95","hashOfConfig":"52"},{"size":584,"mtime":1612175140642,"results":"96","hashOfConfig":"52"},{"size":1188,"mtime":1613486871765,"results":"97","hashOfConfig":"52"},{"size":589,"mtime":1613137019172,"results":"98","hashOfConfig":"52"},{"size":5143,"mtime":1613548646481,"results":"99","hashOfConfig":"52"},{"size":3079,"mtime":1613656539121,"results":"100","hashOfConfig":"52"},{"size":960,"mtime":1613660896374,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"qgqcp2",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"104"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"104"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js",[],["221","222"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/PrivateRoute.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/PageNotFound.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/Home.js",["223","224","225"],"import React, { useState } from 'react'\nimport Dialog from '../components/Dialog'\nimport GameSettings from '../components/GameSettings'\nimport {\n  Button,\n  InputGroup,\n  FormControl,\n  ListGroup,\n  Alert,\n} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useAuthContext, usePlayersContext } from '../contexts'\n\nconst Home = () => {\n  const history = useHistory()\n  const [selectedUser, setSelectedUser] = useState()\n  const [users, setUsers] = useState([])\n  const { logout } = useAuthContext()\n  const {\n    getUser,\n    playRequest,\n    request,\n    response,\n    PLAY_STATE,\n  } = usePlayersContext()\n\n  const isCancelled = response === PLAY_STATE.Cancelled\n\n  const logoutClick = async () => {\n    try {\n      await logout()\n      history.push('/login')\n    } catch {\n      console.log('çıkış yapılamadı')\n    }\n  }\n\n  const searchClick = async (e) => {\n    const value = e.target.value\n    if (value) {\n      if (users.length === 0 || users.length > 0) {\n        const res = await getUser(value)\n        console.log('search', res.data)\n        setUsers(res.data)\n        if (res.data.length === 1) {\n          console.log('length 1')\n          setSelectedUser(users[0])\n        }\n      }\n    } else {\n      setUsers([])\n    }\n  }\n\n\n  const selectUser = async (e) => {\n    document.getElementById('search-input').value = ''\n    setUsers([])\n    const user = JSON.parse(e.target.getAttribute('user'))\n    console.log('user', user)\n    // setSelectedUser(user)\n    const res = await playRequest(user.id)\n  }\n\n  return (\n    <>\n      {request && <Dialog requestedPlayer={request} />}\n      {isCancelled && <Alert />}\n      <InputGroup className='mb-1'>\n        <FormControl\n          placeholder='Username'\n          aria-label='Username'\n          aria-describedby='basic-addon1'\n          onChange={searchClick}\n          id='search-input'\n        />\n      </InputGroup>\n      <ListGroup as='ul' onClick={selectUser}>\n        {users?.map((user) => {\n          console.log(user)\n          return (\n            <ListGroup.Item\n              as='li'\n              active\n              user={JSON.stringify(user)}\n              key={user.id}\n            >\n              {user.username}\n              {'       '}\n              {user.firstname}\n              {'       '}\n              {user.lastname}\n            </ListGroup.Item>\n          )\n        })}\n      </ListGroup>\n      <div className='w-100 text-center mt-2'>\n        <Button variant='link' onClick={logoutClick}>\n          Çıkış yap\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/AuthContext/index.js",["226","227","228","229"],"import React, { useReducer, createContext, useContext } from 'react'\nimport axios from 'axios'\n\nimport {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCES,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCESS,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  LOGOUT,\n  AUTHENTICATED_SUCCES,\n  AUTHENTICATED_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n} from './authActions'\nimport { getRandomPlayerColor } from '../../helper/Fen'\nimport authReducer, { initialState } from './authReducer'\n\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\n\nconst AuthContext = createContext()\nexport const useAuthContext = () => useContext(AuthContext)\nexport const AuthProvider = (props) => {\n  const [state, dispatch] = useReducer(authReducer, initialState)\n\n  const login = async (payload) => {\n    try {\n      // dispatch({  stateType: LOGIN_REQUEST })\n      const res = await axios.post(`${REACT_APP_API_URL}/account/login/`, payload)\n      dispatch({\n        stateType: LOGIN_SUCCESS,\n        payload: res.data,\n      })\n      localStorage.setItem('currentUser', JSON.stringify(res))\n      return res.data\n    } catch (error) {\n      dispatch({\n        stateType: LOGIN_FAIL,\n        error,\n      })\n      throw error\n    }\n  }\n\n  const checkAuthenticated = async () => {\n    if (typeof window === 'undefined') {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      })\n    }\n    if (!localStorage.getItem('access')) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      })\n      return\n    }\n\n    const payload = { token: localStorage.getItem('access') }\n\n    try {\n      const res = await axios.post(\n        `${REACT_APP_API_URL}/account/jwt/verify/`,\n        payload\n      )\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: AUTHENTICATED_SUCCES,\n        })\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        })\n      }\n    } catch (error) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      })\n    }\n  }\n\n\n  const signup = async (payload) => {\n    console.log('sign up payload', payload)\n    try {\n      const res = await axios.post(\n        `${REACT_APP_API_URL}/account/register/`,\n        payload\n      )\n      dispatch({\n        stateType: SIGNUP_SUCCESS,\n        payload: res.data,\n      })\n      return res\n    } catch (err) {\n      dispatch({\n        stateType: SIGNUP_FAIL,\n      })\n      throw err\n    }\n  }\n\n  const verify = async (payload) => {\n    try {\n      const res = await axios.post(\n        `${REACT_APP_API_URL}/account/email-verify/`,\n        payload\n      )\n      dispatch({\n        payload: res.data,\n      })\n    } catch (err) {\n      dispatch({\n        type: ACTIVATION_FAIL,\n      })\n    }\n  }\n\n  const resetPassword = async (payload) => {\n    try {\n      const res = await axios.post(\n        `${REACT_APP_API_URL}/account/password-reset-request/`,\n        payload\n      )\n      dispatch({\n        stateType: RESET_PASSWORD_SUCCESS,\n        payload: res.data,\n      })\n      return res\n    } catch (err) {\n      dispatch({\n        stateType: RESET_PASSWORD_FAIL,\n      })\n      throw err\n    }\n  }\n\n  const resetPasswordConfirm = async (payload) => {\n    try {\n      const res = await axios.post(\n        `${REACT_APP_API_URL}/account/password-reset-confirm/`,\n        payload\n      )\n      dispatch({\n        stateType: RESET_PASSWORD_CONFIRM_SUCCESS,\n        payload: res.data,\n      })\n      return res\n    } catch (error) {\n      dispatch({\n        stateType: RESET_PASSWORD_CONFIRM_FAIL,\n        error,\n      })\n      throw error\n    }\n  }\n  const logout = () => {\n    dispatch({\n      stateType: LOGOUT,\n    })\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        access: state.access,\n        refresh: state.refresh,\n        isAuthenticated: state.isAuthenticated,\n        signup,\n        verify,\n        login,\n        logout,\n        checkAuthenticated,\n        resetPassword,\n        resetPasswordConfirm,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/Login.js",["230","231","232","233","234","235"],"import React, { useState, useRef } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Card, Button, Form, Container, Alert } from 'react-bootstrap'\nimport { useAuthContext } from '../../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport CenteredContainer from '../../components/CenteredContainer'\nconst Login = ({onSubmitId}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  })\n  const history = useHistory()\n\n  const [error, setError] = useState({\n    isError: null,\n    message: '',\n  })\n  const { login } = useAuthContext()\n\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [id]: value,\n    }))\n  }\n\n  const redirectToLogin = () => {\n    history.push('/login')\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const { email, password } = formData\n    console.log('formData', formData)\n\n    try {\n      const res = await login(formData)\n      console.log(res.userId)\n      onSubmitId(res.userId)\n      console.log('redirected to home')\n      history.push('/')\n    } catch (err) {}\n  }\n\n  return (\n    <CenteredContainer>\n      <Card className='w-100' style={{ maxWidth: '430px' }}>\n        <Card.Body>\n          <h2 className='text-center mb-4'>Giriş yap</h2>\n          {error.isError && <Alert variant='danger'>{error.message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id='email'>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type='email'\n                id='email'\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <Form.Group id='password'>\n              <Form.Label>Şifre</Form.Label>\n              <Form.Control\n                type='password'\n                id='password'\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n            <Button className='w-100' type='submit'>\n              Giriş yap\n            </Button>\n          </Form>\n        </Card.Body>\n        <div className='w-100 text-center mt-2'>\n          Hesabınız yok mu? <Link to='/signup'>Kaydol</Link>\n        </div>\n      </Card>\n    </CenteredContainer>\n  )\n}\n\nexport default withRouter(Login)\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/VerifyEmail.js",["236"],"import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport queryString from 'query-string'\nimport axios from 'axios'\n\nconst EmailVerify = ({ history }) => {\n  const initialState = {\n    default: 'default',\n    verified: 'verified',\n    failed: 'failed',\n  }\n\n  const [emailStatus, setEmailStatus] = useState(initialState.default)\n\n  useEffect(() => {\n    const token = queryString.parse(window.location.search)\n\n    history.replace(window.location.pathname)\n\n    if (!token) {\n      return\n    }\n    const BASE_API_URL = 'http://127.0.0.1:8000'\n\n    axios\n      .post(`${BASE_API_URL}/account/email-verify/`, token)\n      .then((response) => {\n        if (response.status !== 200) {\n          setEmailStatus(initialState.failed)\n          return\n        }\n        setEmailStatus(initialState.verified)\n      })\n  }, [])\n\n  const getBody = () => {\n    if (emailStatus === initialState.verified) {\n      return <div>Mail adresiniz doğrulandı</div>\n    } else if (emailStatus === initialState.failed) {\n      return <div>Hata, mail adresiniz doğrulanmadı</div>\n    }\n  }\n\n  return <div>{getBody()}</div>\n}\n\nexport default withRouter(EmailVerify)\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/Signup.js",["237","238","239","240"],"import React, { useState, useRef } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Card, Button, Form, Container, Alert } from 'react-bootstrap'\nimport { useAuthContext } from '../../contexts/AuthContext'\nimport CenteredContainer from '../../components/CenteredContainer'\n\nconst Signup = (props) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    username: '',\n    firstname: '',\n    lastname: '',\n    password: '',\n    confirmPassword: '',\n    displayForm: true,\n    loading: false,\n  })\n\n  const [error, setError] = useState({\n    isError: null,\n    message: '',\n  })\n  const { history } = props\n  const { signup } = useAuthContext()\n\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [id]: value,\n    }))\n  }\n\n  const redirectToLogin = () => {\n    history.push('/login')\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const { email, password, confirmPassword, firstname, lastname, username } = formData\n    console.log('formData', formData)\n    if (password !== confirmPassword) {\n      setError((prevState) => ({\n        ...prevState,\n        isError: true,\n        message: 'Şifreler eşleşmiyor',\n      }))\n      return\n    }\n\n    try {\n      const res = await signup({\n        email,\n        password,\n        firstname,\n        lastname,\n        username,\n      })\n      setFormData((prevState) => ({\n        ...prevState,\n        displayForm: false,\n      }))\n    } catch (err) {}\n  }\n\n  return (\n    <CenteredContainer>\n      {formData.displayForm ? (\n        <Card className='w-100' style={{ maxWidth: '430px' }}>\n          <Card.Body>\n            <h2 className='text-center mb-4'>Kayıt ol</h2>\n            {error.isError && <Alert variant='danger'>{error.message}</Alert>}\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id='firstname'>\n                <Form.Label>Adınız</Form.Label>\n                <Form.Control\n                  type='text'\n                  id='firstname'\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Group id='lastname'>\n                <Form.Label>Soyadınız</Form.Label>\n                <Form.Control\n                  type='text'\n                  id='lastname'\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Group id='username'>\n                <Form.Label>Kullanıcı Adı</Form.Label>\n                <Form.Control\n                  type='text'\n                  id='username'\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Group id='email'>\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type='email'\n                  id='email'\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Group id='password'>\n                <Form.Label>Şifre</Form.Label>\n                <Form.Control\n                  type='password'\n                  id='password'\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Group id='confirm-password'>\n                <Form.Label>Şifre Doğrulama</Form.Label>\n                <Form.Control\n                  type='password'\n                  onChange={handleChange}\n                  id='confirmPassword'\n                  required\n                />\n              </Form.Group>\n              <Button\n                className='w-100'\n                type='submit'\n                disabled={formData.loading}\n              >\n                Kayıt ol\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      ) : (\n        <Alert variant='info'>Mail adresinizi doğrulayınız!</Alert>\n      )}\n      <div className='w-100 text-center mt-2'>\n        <Link to='/login'>Giriş Yap</Link>\n      </div>\n    </CenteredContainer>\n  )\n}\n\nexport default withRouter(Signup)\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/PasswordReset.js",["241","242","243","244","245","246","247"],"import React, { useState, useRef } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Card, Button, Form, Container, Alert } from 'react-bootstrap'\nimport { useAuthContext } from '../../contexts/AuthContext'\nimport CenteredContainer from '../../components/CenteredContainer'\n\nconst Login = (props) => {\n  const [formData, setFormData] = useState({\n    email: '',\n  })\n\n  const [error, setError] = useState({\n    isError: null,\n    message: '',\n  })\n  const { history } = props\n  const { verify } = useAuthContext()\n\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [id]: value,\n    }))\n  }\n\n  const redirectToLogin = () => {\n    history.push('/login')\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const { email, password } = formData\n    console.log('formData', formData)\n\n    try {\n      const res = await verify(formData)\n    } catch (err) {}\n  }\n\n  return (\n    <CenteredContainer>\n      <Card className='w-100' style={{ maxWidth: '430px' }}>\n        <Card.Body>\n          <h2 className='text-center mb-4'>Şifre sıfırlama</h2>\n          {error.isError && <Alert variant='danger'>{error.message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id='email'>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type='email'\n                id='email'\n                onChange={handleChange}\n                required\n              />\n            </Form.Group>\n\n            <Button className='w-100' type='submit'>\n              Şifre sıfırla\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </CenteredContainer>\n  )\n}\n\nexport default withRouter(Login)\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/pages/auth/PasswordResetConfirm.js",["248","249","250"],"import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { useAuthContext } from '../../contexts/AuthContext'\n\nconst PasswordResetConfirm = (props) => {\n  const { history, match } = props\n  const { resetPasswordConfirm } = useAuthContext()\n  const [state, setState] = useState({\n    password: '',\n    confirmPassword: '',\n    response: '',\n  })\n\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setState((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }))\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const { uidb64, token } = match.params\n    const { password, confirmPassword, response } = state\n    if (password !== confirmPassword) {\n      return\n    }\n\n    const payload = {\n      password: state.password,\n      token: token,\n      uidb64: uidb64,\n    }\n    try {\n      const res = await resetPasswordConfirm(payload)\n    } catch (err) {\n    }\n  }\n  return (\n    <>\n      <form display={state.response ? 'none' : 'block'}>\n        <input\n          type='password'\n          id='password'\n          value={state.password}\n          onChange={(e) => handleChange(e)}\n          placeholder='Yeni şifrenizi giriniz'\n        />\n        <input\n          type='password'\n          id='confirmPassword'\n          value={state.confirmPassword}\n          onChange={(e) => handleChange(e)}\n          placeholder='Yeni şifrenizi tekrar giriniz!'\n        />\n        <button type='submit' onClick={(e) => handleSubmit(e)}>\n          Gönder\n        </button>\n      </form>\n    </>\n  )\n}\n\nexport default withRouter(PasswordResetConfirm)\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/GameSettings.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/SocketContext/index.js",["251"],"import React, { useContext, useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nconst SocketContext = React.createContext()\n\nexport const useSocket = () => useContext(SocketContext)\n\nexport function SocketProvider({ id, children }) {\n  const [socket, setSocket] = useState()\n  console.log('localStorage', localStorage)\n\n  console.log('id', id)\n  useEffect(() => {\n    const newSocket = io('http://localhost:5000', {\n      query: { id },\n    })\n\n    setSocket(newSocket)\n\n    return () => newSocket.close()\n  }, [id])\n\n  return (\n    <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\n  )\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/AuthContext/authActions.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/AuthContext/authReducer.js",["252","253","254","255","256","257","258","259"],"import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  ACTIVATION_SUCCES,\n  ACTIVATION_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAIL,\n  RESET_PASSWORD_CONFIRM_SUCCES,\n  RESET_PASSWORD_CONFIRM_FAIL,\n  LOGOUT,\n  AUTHENTICATED_SUCCES,\n  AUTHENTICATED_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n} from './authActions'\n\nexport const initialState = {\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: localStorage.getItem('currentUser') ? true : false,\n  user: localStorage.getItem('currentUser'),\n}\n\nexport default function authReducer(state = initialState, action) {\n  const { stateType, payload } = action\n  switch (stateType) {\n    case AUTHENTICATED_SUCCES:\n      return {\n        ...state,\n        isAuthenticated: true,\n      }\n    case LOGIN_SUCCESS:\n      console.log(payload)\n      localStorage.setItem('currentUser', payload)\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: payload,\n      }\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n      }\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null,\n      }\n    case SIGNUP_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.clear()\n      console.log('logout')\n      console.log(localStorage)\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      }\n    default:\n      return state\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/CenteredContainer.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js",["260","261","262","263","264","265"],"import { useEffect, useContext, createContext, useReducer } from 'react'\n\nimport Board from './Board'\nimport tamerlaneChessReducer, {\n  initialState,\n} from '../reducers/tamerlaneChessReducers'\nimport {\n  START_GAME,\n  SET_HIGHLIGHTING,\n  SELECT_PIECE,\n  MOVE,\n} from '../reducers/tamerlaneChessActionTypes'\nimport { useSocket, usePlayersContext } from '../contexts'\nimport axios from 'axios'\nimport { COLOR } from '../tamerlane-chess/types'\nimport Timer from '../components/Timer'\nimport GameFinishDialog from '../components/GameFinishDialog'\n\nexport const useTamerlaneChessContext = () => useContext(TamerlaneChessContext)\nconst TamerlaneChessContext = createContext()\nexport default function TamerlaneChessBoard() {\n  const [state, dispatch] = useReducer(tamerlaneChessReducer, initialState)\n  const socket = useSocket()\n  const { currentPlayer, opponentPlayer, gameId } = usePlayersContext()\n  console.log('currentPlayer', currentPlayer)\n  console.log('opponentPlayer', opponentPlayer)\n  console.log('Provider called')\n  useEffect(() => {\n    console.log('game starting')\n    const payload = {\n      currentPlayerColor: currentPlayer.side,\n    }\n    dispatch({ type: START_GAME, payload })\n  }, [])\n\n  const removeHighlightSquare = () => {\n    const { pieceSquare, history } = state\n  }\n\n  const highlightSquare = (squaresToHighlight) => {\n    const highlightStyles = squaresToHighlight.reduce((a, c) => {\n      return {\n        ...a,\n        ...{\n          [c]: {\n            background:\n              'radial-gradient(circle, rgb(125, 226, 1) 36%, transparent 40%)',\n            borderRadius: '50%',\n          },\n        },\n        ...squareStyling({\n          history: state.history,\n          pieceSquare: state.pieceSquare,\n        }),\n      }\n    }, {})\n    const payload = {\n      highlightStyles,\n    }\n    dispatch({ type: SET_HIGHLIGHTING, payload })\n  }\n\n  const handleClick = async (square) => {\n    const { tamerlaneChess } = state\n    console.log('from square', state.fromSquare)\n    // console.log(\n    //   'isPiecePromotedPawnOfPawn',\n    //   tamerlaneChess.isPiecePromotedPawnOfPawn(state.fromSquare)\n    // )\n    console.log()\n    console.log('clicked square', square)\n    const piece = tamerlaneChess.getPiece(square)\n    console.log(`clicked piece`)\n    console.log(piece)\n    let turn = tamerlaneChess.getTurn()\n    console.log('turn', turn)\n    // highlight possible moves\n    if (\n      !(\n        state.fromSquare &&\n        tamerlaneChess.isPiecePromotedPawnOfPawn(state.fromSquare)\n      ) &&\n      piece.color === turn\n    ) {\n      const moves = tamerlaneChess.getMoves(square, turn)\n      console.log('posible move')\n      console.log(moves)\n      if (!moves) return\n      const squaresToHighlight = []\n\n      moves.forEach((move) => {\n        squaresToHighlight.push(move)\n      })\n      const payload = {\n        fromSquare: square,\n      }\n      dispatch({ type: SELECT_PIECE, payload })\n      highlightSquare(squaresToHighlight)\n    }\n    // make move\n    else {\n      removeHighlightSquare()\n      console.log('trying to make move')\n      console.log('state.fromSquare', state.fromSquare)\n      console.log(turn)\n      const move = tamerlaneChess.makeMove(state.fromSquare, square, turn)\n      if (move === null) return\n      const fen = tamerlaneChess.getCurrentFen()\n      turn = tamerlaneChess.getTurn()\n      const payload = { fen, turn }\n\n      dispatch({ type: MOVE, payload })\n      console.log('move before send', move)\n\n      let white_player\n      let black_player\n      if (currentPlayer.side === COLOR.white) {\n        white_player = currentPlayer.id\n        black_player = opponentPlayer.id\n      } else {\n        white_player = opponentPlayer.id\n        black_player = currentPlayer.id\n      }\n\n      axios.put(`${process.env.REACT_APP_API_URL}/play/online/${gameId}`, {\n        move: move.savedMove,\n        white_player,\n        black_player,\n        player_color: currentPlayer.side,\n      })\n\n      socket.emit('send-move', {\n        opponentId: opponentPlayer.id,\n        move: move.moveInOpponentBoard,\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (socket == null) return\n\n    socket.on('receive-move', makeOpponentMove)\n\n    return () => socket.off('receive-move')\n  }, [socket, makeOpponentMove])\n\n  function makeOpponentMove({ move }) {\n    console.log('state in useEffect', state)\n    console.log('move', move)\n    const { tamerlaneChess } = state\n    const madeMove = tamerlaneChess.makeMove(move.from, move.to)\n    const fen = tamerlaneChess.getCurrentFen()\n    const turn = tamerlaneChess.getTurn()\n    const payload = { fen, turn }\n\n    dispatch({ type: MOVE, payload })\n  }\n\n  const setPosition = ({ sourceSquare, targetSquare, piece }) => {}\n\n  const value = {\n    ...state,\n    handleClick,\n    dispatch,\n  }\n\n  return (\n    <TamerlaneChessContext.Provider value={value}>\n      {state.winner ? <GameFinishDialog /> : <Timer />}\n      <Board></Board>\n    </TamerlaneChessContext.Provider>\n  )\n}\n\nfunction squareStyling({ pieceSquare, history }) {\n  const sourceSquare = history.length && history[history.length - 1].from\n  const targetSquare = history.length && history[history.length - 1].to\n\n  return {\n    [pieceSquare]: { backgroundColor: 'rgba(255, 255, 0, 0.4)' },\n    ...(history.length && {\n      [sourceSquare]: {\n        backgroundColor: 'rgba(255, 255, 0, 0.4)',\n      },\n      [targetSquare]: {\n        backgroundColor: 'rgba(255, 255, 0, 0.4)',\n      },\n    }),\n  }\n}\n\n/*\n\n\n[\n  {\"w\": {\"from\": \"b2\", \"to\": \"a4\"}, \"b\": {\"from\": \"j9\", \"to\": \"k7\"}},\n  {\"w\": {\"from\": \"c1\", \"to\": \"d4\"}, \"b\": {\"from\": \"h8\", \"to\": \"h7\"}}, \n  {\"w\": {\"from\": \"g3\", \"to\": \"g4\"}}]\n*/\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/helper/Fen.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessActionTypes.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessReducers.js",["266","267","268"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js",["269","270","271","272"],"import React, { useEffect, useState, useMemo } from 'react'\r\nimport './board.css'\r\nimport Square from './Square'\r\nimport Piece from './Piece'\r\nimport { COLUMNS } from '../helper/Fen'\r\n// import TamerlaneChess from '../tamerlane-chess'\r\nconst Board = () => {\r\n\r\n  let squareColor = 'black'\r\n  return (\r\n    <div id='GameBoard'>\r\n      {[...Array(10)].map((_, r) => {\r\n        return [...Array(11)].map((_, c) => {\r\n          const row = 10 - r\r\n          const square = `${COLUMNS[c]}${row}`\r\n          squareColor = squareColor === 'black' ? 'white' : 'black'\r\n          return (\r\n            <Square\r\n              key={square}\r\n              square={square}\r\n              squareColor={squareColor}\r\n              row={row}\r\n              col={c + 1}\r\n            ></Square>\r\n          )\r\n        })\r\n      })}\r\n      {/* <Square key='x' square={'x'}></Square>\r\n      <Square key='y' square={'y'}></Square> */}\r\n    </div>\r\n  )\r\n}\r\nexport default Board\r\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js",["273"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Piece from './Piece'\nimport { useTamerlaneChessContext } from './index'\n\nconst Square = ({ square, squareColor, row, col }) => {\n  const {\n    darkSquareStyle,\n    lightSquareStyle,\n    currentPosition,\n    handleClick,\n    squareStyles,\n  } = useTamerlaneChessContext()\n\n  const hasPiece = (currentPosition, square) =>\n    currentPosition && Object.keys(currentPosition)?.includes(square)\n\n  const getPieceName = (square) => {\n    return currentPosition[square]\n  }\n\n  const squareStyle = () => {\n    return {\n      ...(squareColor === 'black' ? darkSquareStyle : lightSquareStyle),\n    }\n  }\n\n  return (\n    <div\n      style={squareStyle()}\n      id={square}\n      onClick={() => handleClick(square)}\n      className={`file${col} rank${row}`}\n    >\n      <div style={{ ...squareStyles[square], ...size() }}>\n        {hasPiece(currentPosition, square) && (\n          <Piece pieceName={getPieceName(square)}></Piece>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst size = () => ({\n  height: 50,\n  width: 50,\n})\n\n// Square.PropTypes = {\n//   width: PropTypes.func,\n//   squareColor: PropTypes.oneOf(['white', 'black']),\n//   children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]),\n//   square: PropTypes.string,\n//   lightSquareStyle: PropTypes.object,\n//   darkSquareStyle: PropTypes.object,\n//   roughSquare: PropTypes.func,\n// }\n\nexport default Square\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js",["274","275","276","277","278"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js",["279"],"import Piece from './Piece'\n\nexport default class Giraffe extends Piece {\n  static #directions = [\n    { rowDir: -1, colDir: 1 },\n    { rowDir: 1, colDir: 1 },\n    { rowDir: 1, colDir: -1 },\n    { rowDir: -1, colDir: -1 },\n  ]\n\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.fenChar = 'z'\n    this.setFenChar()\n  }\n\n  validMoves(board) {\n    const moves = []\n    let currentCol\n    let currentRow\n    for (const { rowDir, colDir } of Giraffe.#directions) {\n      currentCol = this.col + rowDir\n      currentRow = this.row + colDir\n      let piece = board[currentCol][currentRow]\n    }\n\n    return moves\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js",["280","281"],"import Piece from './Piece'\nimport Camel from './Camel'\nimport Knight from './Knight'\nimport General from './General'\nimport Catapult from './Catapult'\nimport Vizier from './Vizier'\nimport WarEngine from './WarEngine'\nimport Giraffe from './Giraffe'\nimport Elephant from './Elephant'\nimport Rook from './Rook'\nimport AdventitiousKing from './AdventitiousKing'\nimport Prince from './Prince'\nimport { COLOR } from '../types'\nimport { getMoveList, SuperArray } from '../helper'\nclass Pawn extends Piece {\n  static _diagonalColsIncrementValues = [-1, 1]\n  constructor(row, col, color) {\n    super(row, col, color)\n    if (this.constructor === Pawn) {\n      throw Error('Pawn can not be instated')\n    }\n\n    this.pawn = true\n  }\n\n  updateValidMoves(board, playerColor) {\n    this.moveList = this.validMoves(board, playerColor)\n  }\n\n  isPieceOpponent(row, col, board) {\n    const attackedPiece = board[row][col]\n    if (attackedPiece !== 0 && attackedPiece.color !== this.color) {\n      return true\n    }\n    return false\n  }\n\n  validMoves(board, playerColor) {\n    if (playerColor !== COLOR.white && playerColor !== COLOR.black) {\n      throw Error('No matching player color with black or white')\n    }\n    const moves = []\n    let row\n    let col\n\n    const rowIncrementValue = playerColor === this.color ? 1 : -1\n    row = this.row + rowIncrementValue\n\n    //UP\n    col = this.col\n    if (\n      this.IsPositionInBoard(row, col) &&\n      this.isSquareEmpty(row, col, board)\n    ) {\n      moves.push({ row, col })\n    }\n\n    let colIncrementValue\n    for (colIncrementValue of Pawn._diagonalColsIncrementValues) {\n      col = this.col + colIncrementValue\n      if (\n        this.IsPositionInBoard(row, col) &&\n        this.isPieceOpponent(row, col, board)\n      ) {\n        moves.push({ row, col })\n      }\n    }\n\n    return moves\n  }\n}\n\nexport class PawnOfPawn extends Pawn {\n  static #firstPromoted = 1\n  static #secondPromoted = 2\n  static #noPromoted = 0\n\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedCount = 0\n    this.fenChar = 'p'\n    this.promotedToPiece = AdventitiousKing\n    this.setFenChar()\n  }\n  validMoves(board, playerColor) {\n    switch (this.getPromotedType(playerColor)) {\n      //regular moves\n      case PawnOfPawn.#noPromoted:\n        return super.validMoves(board, playerColor)\n      case PawnOfPawn.#firstPromoted:\n        return SuperArray.getUniqueItemContextArray([\n          ...this.getForkMoves(board, playerColor),\n          ...this.getImmobileMoves(board, playerColor),\n        ])\n      case PawnOfPawn.#secondPromoted:\n        const kingPawnInıtPos =\n          playerColor === this.color ? { row: 2, col: 5 } : { row: 7, col: 5 }\n        return [kingPawnInıtPos]\n    }\n  }\n\n  getForkMoves(board, playerColor) {\n    const moves = []\n    let row, col, piece\n    for (row of board) {\n      for (piece of row) {\n        if (\n          this.isOpponentPiece(piece) &&\n          this.IsPositionInBoard(piece.row, piece.col + 2)\n        ) {\n          const rowIncrement = playerColor === this.color ? -1 : 1\n          const forkingRow = piece.row + rowIncrement\n          const forkingCol = piece.col + 1\n          if (this.IsPositionInBoard(forkingRow, forkingCol)) {\n            moves.push({ row: forkingRow, col: forkingCol })\n          }\n        }\n      }\n    }\n    return moves\n  }\n\n  getImmobileMoves(board, playerColor) {\n    const moves = []\n    let row\n    let piece\n    for (row of board) {\n      for (piece of row) {\n        if (this.isOpponentPiece(piece)) {\n          const opponentPieceMoves = getMoveList(board, piece, playerColor)\n          if (opponentPieceMoves.length === 0) {\n            let rowPos, colPos\n            const rowIncerementValue = playerColor === this.color ? -1 : 1\n            rowPos = piece.row + rowIncerementValue\n            let colIncrementValue\n            for (colIncrementValue of PawnOfPawn._diagonalColsIncrementValues) {\n              colPos = piece.col + colIncrementValue\n              if (this.IsPositionInBoard(rowPos, colPos)) {\n                moves.push({\n                  row: rowPos,\n                  col: colPos,\n                })\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return moves\n  }\n\n  getPromotedType(playerColor) {\n    if (\n      (playerColor === this.color &&\n        this.row === 9 &&\n        this.promotedCount === PawnOfPawn.#firstPromoted) ||\n      (playerColor !== this.color &&\n        this.row === 0 &&\n        this.promotedCount === PawnOfPawn.#firstPromoted)\n    ) {\n      return PawnOfPawn.#firstPromoted\n    } else if (\n      (playerColor !== this.color &&\n        this.row === 0 &&\n        this.promotedCount === PawnOfPawn.#secondPromoted) ||\n      (playerColor === this.color &&\n        this.row === 9 &&\n        this.promotedCount === PawnOfPawn.#secondPromoted)\n    ) {\n      console.log('second promoted')\n      return PawnOfPawn.#secondPromoted\n    }\n    return PawnOfPawn.#noPromoted\n  }\n}\n\nexport class KingPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Prince\n    this.fenChar = 'q'\n    this.setFenChar()\n  }\n  validMoves(board, playerColor) {\n    //eğer\n    if (true) {\n      return super.validMoves(board, playerColor)\n    }\n  }\n}\n\nexport class CamelPawn extends Pawn {\n  constructor(row, col, color, fenChar) {\n    super(row, col, color, fenChar)\n    this.promotedToPiece = Camel\n    this.fenChar = 'c'\n    this.setFenChar()\n  }\n\n  validMoves(board, playerColor) {\n    return super.validMoves(board, playerColor)\n  }\n}\n\nexport class CatapultPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Catapult\n    this.fenChar = 't'\n  }\n}\nexport class ElephantPawn extends Pawn {\n  constructor(row, col, color, fenChar) {\n    super(row, col, color, fenChar)\n    this.promotedToPiece = Elephant\n    this.fenChar = 'b'\n    this.setFenChar()\n  }\n}\nexport class GeneralPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = General\n    this.fenChar = 'e'\n    this.setFenChar()\n  }\n}\nexport class GiraffePawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Giraffe\n    this.fenChar = 'h'\n    this.setFenChar()\n  }\n}\nexport class KnightPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Knight\n    this.fenChar = 'n'\n    this.setFenChar()\n  }\n}\nexport class RookPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Rook\n    this.fenChar = 'r'\n    this.setFenChar()\n  }\n}\nexport class VizierPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Vizier\n    this.fenChar = 'y'\n    this.setFenChar()\n  }\n}\nexport class WarEnginePawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = WarEngine\n    this.fenChar = 'x'\n    this.setFenChar()\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Prince.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/AdventitiousKing.js",["282"],"import Piece from './Piece'\n\nimport { KingDirectionsObj, NoneSlidePieceMovesObj } from '../helper'\n\nexport default class AdventitiousKing extends Piece {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.king = true\n    this.fenChar = 'j'\n    this.setFenChar()\n  }\n\n  validMoves(board, playerColor) {\n    const ownCitadel =\n      playerColor === 'w' ? { row: 1, col: 12 } : { row: 8, col: -1 }\n    if (true) {\n      return this.noneSlidePieceMoves(board)\n    }\n  }\n}\n\nObject.assign(\n  AdventitiousKing.prototype,\n  NoneSlidePieceMovesObj,\n  KingDirectionsObj\n)\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/Dialog.js",["283"],"import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { usePlayersContext } from '../contexts'\nexport default function Dialog({ requestedPlayer }) {\n  console.log('requestedPlayer', requestedPlayer)\n  const { resetRequest, sendPlayResponse } = usePlayersContext()\n  const [show, setShow] = useState(false)\n  const handleAccept = () => {\n    console.log('istek kabul edildi')\n    sendPlayResponse(requestedPlayer, true)\n    setShow(false)\n    // resetRequest()\n  }\n\n  const handleCancel = () => {\n    console.log('istek reddedildi')\n    sendPlayResponse(false)\n    setShow(false)\n    // resetRequest()\n  }\n\n  return (\n    <Modal.Dialog show={show} onHide={handleCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>Online oynama isteği</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>{requestedPlayer.username} sizinle oynamak istiyor!</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant='secondary' onClick={handleCancel}>\n          Reddet\n        </Button>\n        <Button variant='primary' onClick={handleAccept}>\n          Kabul et\n        </Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  )\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/hooks/useLocalStorage.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/contexts/PlayersContext/index.js",["284","285","286"],"import React, { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { useSocket } from '../SocketContext'\nimport { getPlayersColor } from '../../helper/Fen'\n\nimport { COLOR } from '../../tamerlane-chess/types'\nconst PLAY_STATE = {\n  Accepted: 'accepted',\n  Cancelled: 'canceled',\n}\n\nconst PlayersContext = React.createContext()\n\nexport const usePlayersContext = () => useContext(PlayersContext)\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\nexport const PlayersProvider = (props) => {\n  const [request, setRequest] = useState()\n  const [state, setState] = useState({\n    gameId: '',\n    currentPlayer: '',\n    opponentPlayer: '',\n  })\n\n  const history = useHistory()\n\n  const [response, setResponse] = useState(null)\n  const socket = useSocket()\n  const getUser = async (username) => {\n    try {\n      console.log('process.env', process.env)\n      console.log('REACT_APP_API_URL', process.env.REACT_APP_API_URL)\n      const res = await axios.get(`${REACT_APP_API_URL}/account/${username}`)\n      return res\n    } catch (error) {\n      throw error\n    }\n  }\n\n  const resetRequest = () => {\n    setRequest(null)\n  }\n\n  const acceptPlayRequest = () => {}\n\n  const startGame = () => {}\n\n  const playRequest = async (playerId) => {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser')).data\n    console.log(localStorage)\n    console.log('playRequest called')\n    console.log(currentUser)\n\n    console.log('currentUser', currentUser)\n    console.log(localStorage)\n    const { currentPlayerColor, opponentPlayerColor } = getPlayersColor()\n    const requestedPlayer = {\n      username: currentUser.username,\n      id: currentUser.userId,\n      side: currentPlayerColor,\n    }\n\n    socket.emit('send-playRequest', {\n      recipientId: playerId,\n      senderPlayer: requestedPlayer,\n    })\n    setState((prevState) => ({\n      ...prevState,\n      currentPlayer: requestedPlayer,\n      opponentPlayer: { id: playerId, side: opponentPlayerColor },\n    }))\n  }\n\n  const playRequestResponse = () => {}\n\n  const sendPlayResponse = async (requestedPlayer, response) => {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser')).data\n    console.log('response', response)\n    if (!response) {\n      //show message in ui\n\n      console.log('istek reddedildi')\n      socket.emit('send-playRequestResponse', {\n        recepientId: requestedPlayer.id,\n        response: false,\n      })\n      return\n    }\n    //set game\n    console.log('requested player in sendPlayResponse', requestedPlayer)\n    let currentPlayer\n    let white_player\n    let black_player\n    if (requestedPlayer.side === COLOR.white) {\n      white_player = requestedPlayer\n      black_player = {\n        username: currentUser.username,\n        id: currentUser.userId,\n        side: COLOR.black,\n      }\n      currentPlayer = black_player\n    } else {\n      white_player = {\n        username: currentUser.username,\n        id: currentUser.userId,\n        side: COLOR.white,\n      }\n      currentPlayer = white_player\n      black_player = requestedPlayer\n    }\n\n    const payload = {\n      black_player: black_player.id,\n      white_player: white_player.id,\n      moves: [],\n    }\n    console.log('istek kabul edildi')\n    console.log(requestedPlayer)\n    console.log('requested player', requestedPlayer.id)\n\n    console.log('currentPlayer', currentPlayer)\n    console.log('opponent player', requestedPlayer)\n\n    const res = await axios.post(`${REACT_APP_API_URL}/play/online/`, payload)\n    console.log('res', res.data.id)\n    socket.emit('send-playResponse', {\n      recipientId: requestedPlayer.id,\n      response: true,\n      gameId: res.data.id,\n    })\n    setState((prevState) => ({\n      ...prevState,\n      gameId: res.data.id,\n      currentPlayer: currentPlayer,\n      opponentPlayer: requestedPlayer,\n    }))\n    history.push('/play')\n  }\n\n  const getPlayResponse = (response) => {\n    if (!response) {\n      console.log('getPlayResponse invoked')\n      setResponse(PLAY_STATE.Cancelled)\n      return\n    }\n  }\n\n  useEffect(() => {\n    if (socket == null) return\n    socket.on('receive-playResponse', ({ response, gameId }) => {\n      console.log('response received')\n      console.log('response', response)\n      if (response) {\n        setState((prevState) => ({ ...prevState, gameId }))\n        console.log(\"GAME ID\", gameId)\n        history.push('/play')\n      }\n    })\n    return () => socket.off('receive-playResponse')\n  }, [socket])\n\n  useEffect(() => {\n    if (socket == null) return\n\n    socket.on('receive-playRequest', ({ recipientId, senderPlayer }) => {\n      console.log('recipient', recipientId)\n      console.log('sender', senderPlayer)\n      setRequest(senderPlayer)\n    })\n\n    return () => socket.off('receive-playRequest')\n  }, [socket])\n\n  const value = {\n    ...state,\n    playRequest,\n    getUser,\n    acceptPlayRequest,\n    request,\n    resetRequest,\n    sendPlayResponse,\n    getPlayResponse,\n    response,\n    PLAY_STATE,\n  }\n\n  return (\n    <PlayersContext.Provider value={value}>\n      {props.children}\n    </PlayersContext.Provider>\n  )\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/Timer.js",["287","288","289","290","291","292"],"import React, { useState, useEffect } from 'react'\nimport { usePlayersContext } from '../contexts'\nimport { GAME_FINISH } from '../reducers/tamerlaneChessActionTypes'\nimport { COLOR } from '../tamerlane-chess/types'\nimport { useTamerlaneChessContext } from '../tamerlane-chessboard'\nimport GameFinishDialog from './GameFinishDialog'\n\nconst TIMER = {\n  PAUSED: 'PAUSED',\n  TICKING: 'TICKING',\n}\n\nexport default function Timer() {\n  const { currentPlayer, opponentPlayer } = usePlayersContext()\n  const { turn, winner, dispatch } = useTamerlaneChessContext()\n  const startedTime = new Date().getTime()\n  const [currentPlayerLeftTime, setCurrentPlayerLeftTime] = useState({\n    minutes: 0,\n    seconds: 5,\n  })\n  const [opponentPlayerLeftTime, setOpponentPlayerLeftTime] = useState({\n    minutes: 0,\n    seconds: 5,\n  })\n\n  function tick() {\n    console.log('moveTurn', turn)\n    console.log('currentPlayer', currentPlayer)\n    if (turn === currentPlayer.side) {\n      setCurrentPlayerLeftTime((prevState) => ({\n        ...prevState,\n        ...getTimeLeft(currentPlayerLeftTime),\n      }))\n\n      console.log('CurrentPlayerLeftTime', currentPlayerLeftTime)\n    } else {\n      console.log('opponent')\n      setOpponentPlayerLeftTime((prevState) => ({\n        ...prevState,\n        ...getTimeLeft(opponentPlayerLeftTime),\n      }))\n    }\n  }\n\n  function pauseTimer(timeoutId) {\n    clearTimeout(timeoutId)\n  }\n\n  useEffect(() => {\n    let timeoutId\n    console.log('currentPlayerLeftTime useEffect called')\n    if (\n      currentPlayerLeftTime.minutes === 0 &&\n      currentPlayerLeftTime.seconds === 0\n    ) {\n      dispatch({ type: GAME_FINISH, payload: { winner: opponentPlayer.side } })\n      return\n    }\n\n    timeoutId = setTimeout(tick, 1000)\n\n    return () => pauseTimer(timeoutId)\n  }, [currentPlayerLeftTime.seconds])\n\n  useEffect(() => {\n    let timeoutId\n    console.log('opponentPlayerLeftTime useEffect called')\n    if (\n      opponentPlayerLeftTime.minutes === 0 &&\n      opponentPlayerLeftTime.seconds === 0\n    ) {\n      dispatch({\n        type: GAME_FINISH,\n        payload: { winner: currentPlayer.side },\n      })\n      return\n    }\n\n    timeoutId = setTimeout(tick, 1000)\n\n    return () => pauseTimer(timeoutId)\n  }, [opponentPlayerLeftTime.seconds])\n\n  const getTimeLeft = (playerLeftTime) => {\n    const currentTime = new Date().getTime()\n    const spentTime = currentTime - startedTime\n    let spentMinutes = Math.floor((spentTime % (1000 * 60 * 60)) / (1000 * 60))\n    let spentSeconds = Math.floor((spentTime % (1000 * 60)) / 1000)\n\n    let minutes = playerLeftTime.minutes - spentMinutes\n    let seconds = playerLeftTime.seconds - spentSeconds\n    if (seconds === -1) {\n      seconds = 59\n      minutes -= 1\n    }\n\n    return {\n      minutes,\n      seconds,\n    }\n  }\n\n  return (\n    <>\n      <div>\n        Kalan zamanın: {currentPlayerLeftTime.minutes}:\n        {currentPlayerLeftTime.seconds}\n      </div>\n      <div>\n        Rakibinin kalan zamanı: {opponentPlayerLeftTime.minutes}:\n        {opponentPlayerLeftTime.seconds}\n      </div>\n    </>\n  )\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/components/GameFinishDialog.js",[],{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":3,"column":8,"nodeType":"299","messageId":"300","endLine":3,"endColumn":20},{"ruleId":"297","severity":1,"message":"301","line":16,"column":10,"nodeType":"299","messageId":"300","endLine":16,"endColumn":22},{"ruleId":"297","severity":1,"message":"302","line":62,"column":11,"nodeType":"299","messageId":"300","endLine":62,"endColumn":14},{"ruleId":"297","severity":1,"message":"303","line":9,"column":3,"nodeType":"299","messageId":"300","endLine":9,"endColumn":20},{"ruleId":"297","severity":1,"message":"304","line":18,"column":3,"nodeType":"299","messageId":"300","endLine":18,"endColumn":22},{"ruleId":"297","severity":1,"message":"305","line":19,"column":3,"nodeType":"299","messageId":"300","endLine":19,"endColumn":19},{"ruleId":"297","severity":1,"message":"306","line":21,"column":10,"nodeType":"299","messageId":"300","endLine":21,"endColumn":30},{"ruleId":"297","severity":1,"message":"307","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":33},{"ruleId":"297","severity":1,"message":"308","line":3,"column":30,"nodeType":"299","messageId":"300","endLine":3,"endColumn":39},{"ruleId":"297","severity":1,"message":"309","line":14,"column":17,"nodeType":"299","messageId":"300","endLine":14,"endColumn":25},{"ruleId":"297","severity":1,"message":"310","line":28,"column":9,"nodeType":"299","messageId":"300","endLine":28,"endColumn":24},{"ruleId":"297","severity":1,"message":"311","line":34,"column":13,"nodeType":"299","messageId":"300","endLine":34,"endColumn":18},{"ruleId":"297","severity":1,"message":"312","line":34,"column":20,"nodeType":"299","messageId":"300","endLine":34,"endColumn":28},{"ruleId":"313","severity":1,"message":"314","line":34,"column":6,"nodeType":"315","endLine":34,"endColumn":8,"suggestions":"316"},{"ruleId":"297","severity":1,"message":"307","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":33},{"ruleId":"297","severity":1,"message":"308","line":3,"column":30,"nodeType":"299","messageId":"300","endLine":3,"endColumn":39},{"ruleId":"297","severity":1,"message":"310","line":34,"column":9,"nodeType":"299","messageId":"300","endLine":34,"endColumn":24},{"ruleId":"297","severity":1,"message":"302","line":52,"column":13,"nodeType":"299","messageId":"300","endLine":52,"endColumn":16},{"ruleId":"297","severity":1,"message":"307","line":1,"column":27,"nodeType":"299","messageId":"300","endLine":1,"endColumn":33},{"ruleId":"297","severity":1,"message":"308","line":3,"column":30,"nodeType":"299","messageId":"300","endLine":3,"endColumn":39},{"ruleId":"297","severity":1,"message":"309","line":12,"column":17,"nodeType":"299","messageId":"300","endLine":12,"endColumn":25},{"ruleId":"297","severity":1,"message":"310","line":27,"column":9,"nodeType":"299","messageId":"300","endLine":27,"endColumn":24},{"ruleId":"297","severity":1,"message":"311","line":33,"column":13,"nodeType":"299","messageId":"300","endLine":33,"endColumn":18},{"ruleId":"297","severity":1,"message":"312","line":33,"column":20,"nodeType":"299","messageId":"300","endLine":33,"endColumn":28},{"ruleId":"297","severity":1,"message":"302","line":37,"column":13,"nodeType":"299","messageId":"300","endLine":37,"endColumn":16},{"ruleId":"297","severity":1,"message":"317","line":7,"column":11,"nodeType":"299","messageId":"300","endLine":7,"endColumn":18},{"ruleId":"297","severity":1,"message":"318","line":26,"column":40,"nodeType":"299","messageId":"300","endLine":26,"endColumn":48},{"ruleId":"297","severity":1,"message":"302","line":37,"column":13,"nodeType":"299","messageId":"300","endLine":37,"endColumn":16},{"ruleId":"297","severity":1,"message":"319","line":3,"column":8,"nodeType":"299","messageId":"300","endLine":3,"endColumn":23},{"ruleId":"297","severity":1,"message":"303","line":6,"column":3,"nodeType":"299","messageId":"300","endLine":6,"endColumn":20},{"ruleId":"297","severity":1,"message":"320","line":7,"column":3,"nodeType":"299","messageId":"300","endLine":7,"endColumn":18},{"ruleId":"297","severity":1,"message":"321","line":8,"column":3,"nodeType":"299","messageId":"300","endLine":8,"endColumn":25},{"ruleId":"297","severity":1,"message":"322","line":9,"column":3,"nodeType":"299","messageId":"300","endLine":9,"endColumn":22},{"ruleId":"297","severity":1,"message":"323","line":10,"column":3,"nodeType":"299","messageId":"300","endLine":10,"endColumn":32},{"ruleId":"297","severity":1,"message":"324","line":11,"column":3,"nodeType":"299","messageId":"300","endLine":11,"endColumn":30},{"ruleId":"297","severity":1,"message":"325","line":14,"column":3,"nodeType":"299","messageId":"300","endLine":14,"endColumn":21},{"ruleId":"297","severity":1,"message":"304","line":15,"column":3,"nodeType":"299","messageId":"300","endLine":15,"endColumn":22},{"ruleId":"313","severity":1,"message":"326","line":34,"column":6,"nodeType":"315","endLine":34,"endColumn":8,"suggestions":"327"},{"ruleId":"297","severity":1,"message":"328","line":37,"column":13,"nodeType":"299","messageId":"300","endLine":37,"endColumn":24},{"ruleId":"297","severity":1,"message":"317","line":37,"column":26,"nodeType":"299","messageId":"300","endLine":37,"endColumn":33},{"ruleId":"313","severity":1,"message":"329","line":147,"column":3,"nodeType":"330","endLine":157,"endColumn":4},{"ruleId":"297","severity":1,"message":"331","line":151,"column":11,"nodeType":"299","messageId":"300","endLine":151,"endColumn":19},{"ruleId":"297","severity":1,"message":"332","line":159,"column":9,"nodeType":"299","messageId":"300","endLine":159,"endColumn":20},{"ruleId":"297","severity":1,"message":"333","line":11,"column":3,"nodeType":"299","messageId":"300","endLine":11,"endColumn":11},{"ruleId":"297","severity":1,"message":"334","line":12,"column":3,"nodeType":"299","messageId":"300","endLine":12,"endColumn":11},{"ruleId":"297","severity":1,"message":"335","line":13,"column":3,"nodeType":"299","messageId":"300","endLine":13,"endColumn":22},{"ruleId":"297","severity":1,"message":"336","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":26},{"ruleId":"297","severity":1,"message":"337","line":1,"column":28,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"338","line":1,"column":38,"nodeType":"299","messageId":"300","endLine":1,"endColumn":45},{"ruleId":"297","severity":1,"message":"339","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":13},{"ruleId":"297","severity":1,"message":"340","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":17},{"ruleId":"297","severity":1,"message":"341","line":1,"column":10,"nodeType":"299","messageId":"300","endLine":1,"endColumn":33},{"ruleId":"297","severity":1,"message":"342","line":143,"column":18,"nodeType":"299","messageId":"300","endLine":143,"endColumn":21},{"ruleId":"297","severity":1,"message":"343","line":143,"column":30,"nodeType":"299","messageId":"300","endLine":143,"endColumn":45},{"ruleId":"297","severity":1,"message":"344","line":351,"column":11,"nodeType":"299","messageId":"300","endLine":351,"endColumn":16},{"ruleId":"297","severity":1,"message":"345","line":659,"column":9,"nodeType":"299","messageId":"300","endLine":659,"endColumn":12},{"ruleId":"297","severity":1,"message":"344","line":24,"column":11,"nodeType":"299","messageId":"300","endLine":24,"endColumn":16},{"ruleId":"346","severity":1,"message":"347","line":86,"column":5,"nodeType":"348","messageId":"349","endLine":99,"endColumn":6},{"ruleId":"297","severity":1,"message":"350","line":104,"column":14,"nodeType":"299","messageId":"300","endLine":104,"endColumn":17},{"ruleId":"297","severity":1,"message":"351","line":14,"column":11,"nodeType":"299","messageId":"300","endLine":14,"endColumn":21},{"ruleId":"297","severity":1,"message":"352","line":6,"column":11,"nodeType":"299","messageId":"300","endLine":6,"endColumn":23},{"ruleId":"297","severity":1,"message":"353","line":46,"column":9,"nodeType":"299","messageId":"300","endLine":46,"endColumn":18},{"ruleId":"297","severity":1,"message":"354","line":74,"column":9,"nodeType":"299","messageId":"300","endLine":74,"endColumn":28},{"ruleId":"313","severity":1,"message":"355","line":160,"column":6,"nodeType":"315","endLine":160,"endColumn":14,"suggestions":"356"},{"ruleId":"297","severity":1,"message":"357","line":4,"column":10,"nodeType":"299","messageId":"300","endLine":4,"endColumn":15},{"ruleId":"297","severity":1,"message":"358","line":6,"column":8,"nodeType":"299","messageId":"300","endLine":6,"endColumn":24},{"ruleId":"297","severity":1,"message":"359","line":8,"column":7,"nodeType":"299","messageId":"300","endLine":8,"endColumn":12},{"ruleId":"297","severity":1,"message":"360","line":15,"column":17,"nodeType":"299","messageId":"300","endLine":15,"endColumn":23},{"ruleId":"313","severity":1,"message":"361","line":63,"column":6,"nodeType":"315","endLine":63,"endColumn":37,"suggestions":"362"},{"ruleId":"313","severity":1,"message":"363","line":82,"column":6,"nodeType":"315","endLine":82,"endColumn":38,"suggestions":"364"},"no-native-reassign",["365"],"no-negated-in-lhs",["366"],"no-unused-vars","'GameSettings' is defined but never used.","Identifier","unusedVar","'selectedUser' is assigned a value but never used.","'res' is assigned a value but never used.","'ACTIVATION_SUCCES' is defined but never used.","'USER_LOADED_SUCCESS' is defined but never used.","'USER_LOADED_FAIL' is defined but never used.","'getRandomPlayerColor' is defined but never used.","'useRef' is defined but never used.","'Container' is defined but never used.","'setError' is assigned a value but never used.","'redirectToLogin' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'initialState.failed', and 'initialState.verified'. Either include them or remove the dependency array.","ArrayExpression",["367"],"'history' is assigned a value but never used.","'response' is assigned a value but never used.","'useLocalStorage' is defined but never used.","'ACTIVATION_FAIL' is defined but never used.","'RESET_PASSWORD_SUCCESS' is defined but never used.","'RESET_PASSWORD_FAIL' is defined but never used.","'RESET_PASSWORD_CONFIRM_SUCCES' is defined but never used.","'RESET_PASSWORD_CONFIRM_FAIL' is defined but never used.","'AUTHENTICATED_FAIL' is defined but never used.","React Hook useEffect has a missing dependency: 'currentPlayer.side'. Either include it or remove the dependency array.",["368"],"'pieceSquare' is assigned a value but never used.","The 'makeOpponentMove' function makes the dependencies of useEffect Hook (at line 145) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'makeOpponentMove' in its own useCallback() Hook.","FunctionDeclaration","'madeMove' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'validFen' is defined but never used.","'fenToObj' is defined but never used.","'validPositionObject' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'Piece' is defined but never used.","'PropTypes' is defined but never used.","'includeInTwoDimensArray' is defined but never used.","'col' is assigned a value but never used.","'promotedToPiece' is assigned a value but never used.","'piece' is assigned a value but never used.","'fen' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'col' is defined but never used.","'ownCitadel' is assigned a value but never used.","'resetRequest' is assigned a value but never used.","'startGame' is assigned a value but never used.","'playRequestResponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["369"],"'COLOR' is defined but never used.","'GameFinishDialog' is defined but never used.","'TIMER' is assigned a value but never used.","'winner' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPlayerLeftTime.minutes', 'dispatch', 'opponentPlayer.side', and 'tick'. Either include them or remove the dependency array.",["370"],"React Hook useEffect has missing dependencies: 'currentPlayer.side', 'dispatch', 'opponentPlayerLeftTime.minutes', and 'tick'. Either include them or remove the dependency array.",["371"],"no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},"Update the dependencies array to be: [history, initialState.failed, initialState.verified]",{"range":"382","text":"383"},"Update the dependencies array to be: [currentPlayer.side]",{"range":"384","text":"385"},"Update the dependencies array to be: [history, socket]",{"range":"386","text":"387"},"Update the dependencies array to be: [currentPlayerLeftTime.minutes, currentPlayerLeftTime.seconds, dispatch, opponentPlayer.side, tick]",{"range":"388","text":"389"},"Update the dependencies array to be: [currentPlayer.side, dispatch, opponentPlayerLeftTime.minutes, opponentPlayerLeftTime.seconds, tick]",{"range":"390","text":"391"},[861,863],"[history, initialState.failed, initialState.verified]",[1199,1201],"[currentPlayer.side]",[4505,4513],"[history, socket]",[1791,1822],"[currentPlayerLeftTime.minutes, currentPlayerLeftTime.seconds, dispatch, opponentPlayer.side, tick]",[2234,2266],"[currentPlayer.side, dispatch, opponentPlayerLeftTime.minutes, opponentPlayerLeftTime.seconds, tick]"]