[{"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js":"1","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js":"2","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js":"3","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js":"4","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js":"5","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js":"6","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js":"7","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js":"8","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js":"9","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js":"10","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js":"11","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js":"12","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js":"13","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js":"14","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js":"15","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js":"16","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js":"17","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js":"18","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js":"19","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js":"20","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js":"21","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js":"22","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js":"23","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js":"24","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessReducers.js":"25","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessActionTypes.js":"26","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/helper/Fen.js":"27","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/AdventitiousKing.js":"28","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Prince.js":"29"},{"size":500,"mtime":1610695920352,"results":"30","hashOfConfig":"31"},{"size":203,"mtime":1610971058234,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1610695920352,"results":"33","hashOfConfig":"31"},{"size":3500,"mtime":1611829950918,"results":"34","hashOfConfig":"31"},{"size":1008,"mtime":1611854108402,"results":"35","hashOfConfig":"31"},{"size":1474,"mtime":1611394900621,"results":"36","hashOfConfig":"31"},{"size":158,"mtime":1611136956381,"results":"37","hashOfConfig":"31"},{"size":17949,"mtime":1611938186718,"results":"38","hashOfConfig":"31"},{"size":763,"mtime":1611134382815,"results":"39","hashOfConfig":"31"},{"size":2314,"mtime":1611850705794,"results":"40","hashOfConfig":"31"},{"size":495,"mtime":1611910585521,"results":"41","hashOfConfig":"31"},{"size":1303,"mtime":1611910581447,"results":"42","hashOfConfig":"31"},{"size":364,"mtime":1611910576067,"results":"43","hashOfConfig":"31"},{"size":361,"mtime":1611910601859,"results":"44","hashOfConfig":"31"},{"size":489,"mtime":1611910619933,"results":"45","hashOfConfig":"31"},{"size":364,"mtime":1611910690018,"results":"46","hashOfConfig":"31"},{"size":366,"mtime":1611910696233,"results":"47","hashOfConfig":"31"},{"size":631,"mtime":1611910606604,"results":"48","hashOfConfig":"31"},{"size":1077,"mtime":1611910686384,"results":"49","hashOfConfig":"31"},{"size":7042,"mtime":1611910677807,"results":"50","hashOfConfig":"31"},{"size":584,"mtime":1611604801993,"results":"51","hashOfConfig":"31"},{"size":1239,"mtime":1611916568858,"results":"52","hashOfConfig":"31"},{"size":156,"mtime":1610813905318,"results":"53","hashOfConfig":"31"},{"size":668,"mtime":1611910612813,"results":"54","hashOfConfig":"31"},{"size":1537,"mtime":1611916428125,"results":"55","hashOfConfig":"31"},{"size":217,"mtime":1611395259331,"results":"56","hashOfConfig":"31"},{"size":4868,"mtime":1611916374591,"results":"57","hashOfConfig":"31"},{"size":580,"mtime":1611910593793,"results":"58","hashOfConfig":"31"},{"size":476,"mtime":1611910682497,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"qgqcp2",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/index.js",[],["125","126"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/App.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reportWebVitals.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/index.js",["127","128","129"],"import { useEffect, useContext, createContext, useReducer } from 'react'\n\nimport Board from './Board'\nimport tamerlaneChessReducer, {\n  initialState,\n} from '../reducers/tamerlaneChessReducers'\nimport {\n  START_GAME,\n  SET_HIGHLIGHTING,\n  SELECT_PIECE,\n  MOVE,\n} from '../reducers/tamerlaneChessActionTypes'\n\nexport const useTamerlaneChessContext = () => useContext(TamerlaneChessContext)\nconst TamerlaneChessContext = createContext()\nexport default function TamerlaneChessBoard() {\n  const [state, dispatch] = useReducer(tamerlaneChessReducer, initialState)\n  console.log('Provider called')\n  useEffect(() => {\n    dispatch({ type: START_GAME })\n  }, [])\n\n  const removeHighlightSquare = () => {\n    const { pieceSquare, history } = state\n    // setState((prevState) => ({\n    //   ...prevState,\n    //   fromSquare: '',\n    //   squareStyles: squareStyling({ pieceSquare, history }),\n    // }))\n  }\n  const highlightSquare = (squaresToHighlight) => {\n    const highlightStyles = squaresToHighlight.reduce((a, c) => {\n      return {\n        ...a,\n        ...{\n          [c]: {\n            background:\n              'radial-gradient(circle, rgb(125, 226, 1) 36%, transparent 40%)',\n            borderRadius: '50%',\n          },\n        },\n        ...squareStyling({\n          history: state.history,\n          pieceSquare: state.pieceSquare,\n        }),\n      }\n    }, {})\n    const payload = {\n      highlightStyles,\n    }\n    dispatch({ type: SET_HIGHLIGHTING, payload })\n  }\n\n  const handleClick = (square) => {\n    const { tamerlaneChess } = state\n    console.log('from square', state.fromSquare)\n    console.log('clicked square', square)\n    const piece = tamerlaneChess.getPiece(square)\n    console.log(`clicked piece`)\n    console.log(piece)\n    const turn = tamerlaneChess.getTurn()\n\n    // highlight possible moves\n    if (\n      !(\n        state.fromSquare &&\n        tamerlaneChess.isPiecePromotedPawnOfPawn(state.fromSquare)\n      ) &&\n      piece.color === turn\n    ) {\n      const moves = tamerlaneChess.getMoves(square, turn)\n      console.log('posible move')\n      console.log(moves)\n      if (!moves) return\n      const squaresToHighlight = []\n\n      moves.forEach((move) => {\n        squaresToHighlight.push(move)\n      })\n      const payload = {\n        fromSquare: square,\n      }\n      dispatch({ type: SELECT_PIECE, payload })\n      highlightSquare(squaresToHighlight)\n    }\n    // make move\n    else {\n      removeHighlightSquare()\n      console.log('trying to make move')\n      console.log(turn)\n      const move = tamerlaneChess.makeMove(state.fromSquare, square, turn)\n      if (move === null) return\n      const fen = tamerlaneChess.getCurrentFen()\n      const payload = { fen }\n      \n      dispatch({ type: MOVE, payload })\n    }\n  }\n\n  const setPosition = ({ sourceSquare, targetSquare, piece }) => {}\n\n  const value = {\n    ...state,\n    handleClick,\n  }\n  return (\n    <TamerlaneChessContext.Provider value={value}>\n      <Board></Board>\n    </TamerlaneChessContext.Provider>\n  )\n}\n\nfunction squareStyling({ pieceSquare, history }) {\n  const sourceSquare = history.length && history[history.length - 1].from\n  const targetSquare = history.length && history[history.length - 1].to\n\n  return {\n    [pieceSquare]: { backgroundColor: 'rgba(255, 255, 0, 0.4)' },\n    ...(history.length && {\n      [sourceSquare]: {\n        backgroundColor: 'rgba(255, 255, 0, 0.4)',\n      },\n      [targetSquare]: {\n        backgroundColor: 'rgba(255, 255, 0, 0.4)',\n      },\n    }),\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Board.js",["130","131","132","133","134"],"import React, { useEffect, useState, useMemo } from 'react'\r\nimport './board.css'\r\nimport Square from './Square'\r\nimport Piece from './Piece'\r\nimport { COLUMNS } from '../helper/Fen'\r\nimport { useTamerlaneChessContext } from './index'\r\n// import TamerlaneChess from '../tamerlane-chess'\r\nconst Board = () => {\r\n\r\n  let squareColor = 'black'\r\n  return (\r\n    <div id='GameBoard'>\r\n      {[...Array(10)].map((_, r) => {\r\n        return [...Array(11)].map((_, c) => {\r\n          const row = 10 - r\r\n          const square = `${COLUMNS[c]}${row}`\r\n          squareColor = squareColor === 'black' ? 'white' : 'black'\r\n          return (\r\n            <Square\r\n              key={square}\r\n              square={square}\r\n              squareColor={squareColor}\r\n              row={row}\r\n              col={c + 1}\r\n            ></Square>\r\n          )\r\n        })\r\n      })}\r\n      {/* <Square key='x' square={'x'}></Square>\r\n      <Square key='y' square={'y'}></Square> */}\r\n    </div>\r\n  )\r\n}\r\nexport default Board\r\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Square.js",["135"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Piece from './Piece'\nimport { useTamerlaneChessContext } from './index'\n\nconst Square = ({ square, squareColor, row, col }) => {\n  const {\n    darkSquareStyle,\n    lightSquareStyle,\n    currentPosition,\n    handleClick,\n    squareStyles,\n  } = useTamerlaneChessContext()\n\n  const hasPiece = (currentPosition, square) => {\n    const keys = Object.keys(currentPosition)\n    return currentPosition && keys && keys.includes(square)\n  }\n  const getPieceName = (square) => {\n    return currentPosition[square]\n  }\n\n  const squareStyle = () => {\n    return {\n      ...(squareColor === 'black' ? darkSquareStyle : lightSquareStyle),\n    }\n  }\n\n  return (\n    <div\n      style={squareStyle()}\n      id={square}\n      onClick={() => handleClick(square)}\n      className={`file${col} rank${row}`}\n    > \n      <div style={{ ...squareStyles[square], ...size() }}>\n        {hasPiece(currentPosition, square) && (\n          <Piece pieceName={getPieceName(square)}></Piece>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst size = () => ({\n  height: 50,\n  width: 50,\n})\n\n// Square.PropTypes = {\n//   width: PropTypes.func,\n//   squareColor: PropTypes.oneOf(['white', 'black']),\n//   children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]),\n//   square: PropTypes.string,\n//   lightSquareStyle: PropTypes.object,\n//   darkSquareStyle: PropTypes.object,\n//   roughSquare: PropTypes.func,\n// }\n\nexport default Square\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chessboard/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/index.js",["136","137","138","139","140"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/helper/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Camel.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Catapult.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Elephant.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/General.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Knight.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Vizier.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/WarEngine.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Giraffe.js",["141"],"import Piece from './Piece'\n\nexport default class Giraffe extends Piece {\n  static #directions = [\n    { rowDir: -1, colDir: 1 },\n    { rowDir: 1, colDir: 1 },\n    { rowDir: 1, colDir: -1 },\n    { rowDir: -1, colDir: -1 },\n  ]\n\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.fenChar = 'z'\n    this.setFenChar()\n  }\n\n  validMoves(board) {\n    const moves = []\n    let currentCol\n    let currentRow\n    for (const { rowDir, colDir } of Giraffe.#directions) {\n      currentCol = this.col + rowDir\n      currentRow = this.row + colDir\n      let piece = board[currentCol][currentRow]\n    }\n\n    return moves\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Rook.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Pawn.js",["142","143"],"import Piece from './Piece'\nimport Camel from './Camel'\nimport Knight from './Knight'\nimport General from './General'\nimport Catapult from './Catapult'\nimport Vizier from './Vizier'\nimport WarEngine from './WarEngine'\nimport Giraffe from './Giraffe'\nimport Elephant from './Elephant'\nimport Rook from './Rook'\nimport AdventitiousKing from './AdventitiousKing'\nimport Prince from './Prince'\nimport { COLOR } from '../types'\nimport { getMoveList, SuperArray } from '../helper'\nclass Pawn extends Piece {\n  static _diagonalColsIncrementValues = [-1, 1]\n  constructor(row, col, color) {\n    super(row, col, color)\n    if (this.constructor === Pawn) {\n      throw Error('Pawn can not be instated')\n    }\n\n    this.pawn = true\n  }\n\n  updateValidMoves(board, playerColor) {\n    this.moveList = this.validMoves(board, playerColor)\n  }\n\n  isPieceOpponent(row, col, board) {\n    const attackedPiece = board[row][col]\n    if (attackedPiece !== 0 && attackedPiece.color !== this.color) {\n      return true\n    }\n    return false\n  }\n\n  validMoves(board, playerColor) {\n    if (playerColor !== COLOR.white && playerColor !== COLOR.black) {\n      throw Error('No matching player color with black or white')\n    }\n    const moves = []\n    let row\n    let col\n\n    const rowIncrementValue = playerColor === this.color ? 1 : -1\n    row = this.row + rowIncrementValue\n\n    //UP\n    col = this.col\n    if (\n      this.IsPositionInBoard(row, col) &&\n      this.isSquareEmpty(row, col, board)\n    ) {\n      moves.push({ row, col })\n    }\n\n    let colIncrementValue\n    for (colIncrementValue of Pawn._diagonalColsIncrementValues) {\n      col = this.col + colIncrementValue\n      if (\n        this.IsPositionInBoard(row, col) &&\n        this.isPieceOpponent(row, col, board)\n      ) {\n        moves.push({ row, col })\n      }\n    }\n\n    return moves\n  }\n}\n\nexport class PawnOfPawn extends Pawn {\n  static #firstPromoted = 1\n  static #secondPromoted = 2\n  static #noPromoted = 0\n\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedCount = 0\n    this.fenChar = 'p'\n    this.promotedToPiece = AdventitiousKing\n    this.setFenChar()\n  }\n  validMoves(board, playerColor) {\n    switch (this.getPromotedType(playerColor)) {\n      //regular moves\n      case PawnOfPawn.#noPromoted:\n        return super.validMoves(board, playerColor)\n      case PawnOfPawn.#firstPromoted:\n        return SuperArray.getUniqueItemContextArray([\n          ...this.getForkMoves(board, playerColor),\n          ...this.getImmobileMoves(board, playerColor),\n        ])\n      case PawnOfPawn.#secondPromoted:\n        const kingPawnInıtPos =\n          playerColor === this.color ? { row: 2, col: 5 } : { row: 7, col: 5 }\n        return [kingPawnInıtPos]\n    }\n  }\n\n  getForkMoves(board, playerColor) {\n    const moves = []\n    let row, col, piece\n    for (row of board) {\n      for (piece of row) {\n        if (\n          this.isOpponentPiece(piece) &&\n          this.IsPositionInBoard(piece.row, piece.col + 2)\n        ) {\n          const rowIncrement = playerColor === this.color ? -1 : 1\n          const forkingRow = piece.row + rowIncrement\n          const forkingCol = piece.col + 1\n          if (this.IsPositionInBoard(forkingRow, forkingCol)) {\n            moves.push({ row: forkingRow, col: forkingCol })\n          }\n        }\n      }\n    }\n    return moves\n  }\n\n  getImmobileMoves(board, playerColor) {\n    const moves = []\n    let row\n    let piece\n    for (row of board) {\n      for (piece of row) {\n        if (this.isOpponentPiece(piece)) {\n          const opponentPieceMoves = getMoveList(board, piece, playerColor)\n          if (opponentPieceMoves.length === 0) {\n            let rowPos, colPos\n            const rowIncerementValue = playerColor === this.color ? -1 : 1\n            rowPos = piece.row + rowIncerementValue\n            let colIncrementValue\n            for (colIncrementValue of PawnOfPawn._diagonalColsIncrementValues) {\n              colPos = piece.col + colIncrementValue\n              if (this.IsPositionInBoard(rowPos, colPos)) {\n                moves.push({\n                  row: rowPos,\n                  col: colPos,\n                })\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return moves\n  }\n\n  getPromotedType(playerColor) {\n    if (\n      (playerColor === this.color &&\n        this.row === 9 &&\n        this.promotedCount === PawnOfPawn.#firstPromoted) ||\n      (playerColor !== this.color &&\n        this.row === 0 &&\n        this.promotedCount === PawnOfPawn.#firstPromoted)\n    ) {\n      return PawnOfPawn.#firstPromoted\n    } else if (\n      (playerColor !== this.color &&\n        this.row === 0 &&\n        this.promotedCount === PawnOfPawn.#secondPromoted) ||\n      (playerColor === this.color &&\n        this.row === 9 &&\n        this.promotedCount === PawnOfPawn.#secondPromoted)\n    ) {\n      console.log('second promoted')\n      return PawnOfPawn.#secondPromoted\n    }\n    return PawnOfPawn.#noPromoted\n  }\n}\n\nexport class KingPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Prince\n    this.fenChar = 'q'\n    this.setFenChar()\n  }\n  validMoves(board, playerColor) {\n    //eğer\n    if (true) {\n      return super.validMoves(board, playerColor)\n    }\n  }\n}\n\nexport class CamelPawn extends Pawn {\n  constructor(row, col, color, fenChar) {\n    super(row, col, color, fenChar)\n    this.promotedToPiece = Camel\n    this.fenChar = 'c'\n    this.setFenChar()\n  }\n\n  validMoves(board, playerColor) {\n    return super.validMoves(board, playerColor)\n  }\n}\n\nexport class CatapultPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Catapult\n    this.fenChar = 't'\n  }\n}\nexport class ElephantPawn extends Pawn {\n  constructor(row, col, color, fenChar) {\n    super(row, col, color, fenChar)\n    this.promotedToPiece = Elephant\n    this.fenChar = 'b'\n    this.setFenChar()\n  }\n}\nexport class GeneralPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = General\n    this.fenChar = 'e'\n    this.setFenChar()\n  }\n}\nexport class GiraffePawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Giraffe\n    this.fenChar = 'h'\n    this.setFenChar()\n  }\n}\nexport class KnightPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Knight\n    this.fenChar = 'n'\n    this.setFenChar()\n  }\n}\nexport class RookPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Rook\n    this.fenChar = 'r'\n    this.setFenChar()\n  }\n}\nexport class VizierPawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = Vizier\n    this.fenChar = 'y'\n    this.setFenChar()\n  }\n}\nexport class WarEnginePawn extends Pawn {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.promotedToPiece = WarEngine\n    this.fenChar = 'x'\n    this.setFenChar()\n  }\n}\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/NoneSlidePiece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Piece.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/types/index.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/King.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessReducers.js",["144","145","146"],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/reducers/tamerlaneChessActionTypes.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/helper/Fen.js",[],"/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/AdventitiousKing.js",["147"],"import Piece from './Piece'\n\nimport { KingDirectionsObj, NoneSlidePieceMovesObj } from '../helper'\n\nexport default class AdventitiousKing extends Piece {\n  constructor(row, col, color) {\n    super(row, col, color)\n    this.king = true\n    this.fenChar = 'j'\n    this.setFenChar()\n  }\n\n  validMoves(board, playerColor) {\n    const ownCitadel =\n      playerColor === 'w' ? { row: 1, col: 12 } : { row: 8, col: -1 }\n    if (true) {\n      return this.noneSlidePieceMoves(board)\n    }\n  }\n}\n\nObject.assign(\n  AdventitiousKing.prototype,\n  NoneSlidePieceMovesObj,\n  KingDirectionsObj\n)\n","/home/muzaffer/Desktop/My Projects/tamerlane-chess/src/tamerlane-chess/Pieces/Prince.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":24,"column":13,"nodeType":"154","messageId":"155","endLine":24,"endColumn":24},{"ruleId":"152","severity":1,"message":"156","line":24,"column":26,"nodeType":"154","messageId":"155","endLine":24,"endColumn":33},{"ruleId":"152","severity":1,"message":"157","line":100,"column":9,"nodeType":"154","messageId":"155","endLine":100,"endColumn":20},{"ruleId":"152","severity":1,"message":"158","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"159","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"160","line":1,"column":38,"nodeType":"154","messageId":"155","endLine":1,"endColumn":45},{"ruleId":"152","severity":1,"message":"161","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":13},{"ruleId":"152","severity":1,"message":"162","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":34},{"ruleId":"152","severity":1,"message":"163","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":17},{"ruleId":"152","severity":1,"message":"164","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":33},{"ruleId":"152","severity":1,"message":"165","line":120,"column":18,"nodeType":"154","messageId":"155","endLine":120,"endColumn":21},{"ruleId":"152","severity":1,"message":"166","line":120,"column":30,"nodeType":"154","messageId":"155","endLine":120,"endColumn":45},{"ruleId":"152","severity":1,"message":"167","line":205,"column":11,"nodeType":"154","messageId":"155","endLine":205,"endColumn":16},{"ruleId":"152","severity":1,"message":"168","line":427,"column":9,"nodeType":"154","messageId":"155","endLine":427,"endColumn":12},{"ruleId":"152","severity":1,"message":"167","line":24,"column":11,"nodeType":"154","messageId":"155","endLine":24,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":86,"column":5,"nodeType":"171","messageId":"172","endLine":99,"endColumn":6},{"ruleId":"152","severity":1,"message":"173","line":104,"column":14,"nodeType":"154","messageId":"155","endLine":104,"endColumn":17},{"ruleId":"152","severity":1,"message":"174","line":10,"column":3,"nodeType":"154","messageId":"155","endLine":10,"endColumn":11},{"ruleId":"152","severity":1,"message":"175","line":11,"column":3,"nodeType":"154","messageId":"155","endLine":11,"endColumn":11},{"ruleId":"152","severity":1,"message":"176","line":12,"column":3,"nodeType":"154","messageId":"155","endLine":12,"endColumn":22},{"ruleId":"152","severity":1,"message":"177","line":14,"column":11,"nodeType":"154","messageId":"155","endLine":14,"endColumn":21},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'pieceSquare' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'Piece' is defined but never used.","'useTamerlaneChessContext' is defined but never used.","'PropTypes' is defined but never used.","'includeInTwoDimensArray' is defined but never used.","'col' is assigned a value but never used.","'promotedToPiece' is assigned a value but never used.","'piece' is assigned a value but never used.","'fen' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'col' is defined but never used.","'validFen' is defined but never used.","'fenToObj' is defined but never used.","'validPositionObject' is defined but never used.","'ownCitadel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]